// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ssn/type/candidate.proto
// Protobuf Java Version: 4.29.3

package ai.visma.ssn.type;

public interface VatDistributionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ssn.type.VatDistribution)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The vat distribution candidate percentage
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getPercentageList();
  /**
   * <pre>
   * The vat distribution candidate percentage
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
   */
  ai.visma.ssn.type.Candidate getPercentage(int index);
  /**
   * <pre>
   * The vat distribution candidate percentage
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
   */
  int getPercentageCount();
  /**
   * <pre>
   * The vat distribution candidate percentage
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getPercentageOrBuilderList();
  /**
   * <pre>
   * The vat distribution candidate percentage
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getPercentageOrBuilder(
      int index);

  /**
   * <pre>
   * The vat distribution candidate
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getTotalVatList();
  /**
   * <pre>
   * The vat distribution candidate
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
   */
  ai.visma.ssn.type.Candidate getTotalVat(int index);
  /**
   * <pre>
   * The vat distribution candidate
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
   */
  int getTotalVatCount();
  /**
   * <pre>
   * The vat distribution candidate
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getTotalVatOrBuilderList();
  /**
   * <pre>
   * The vat distribution candidate
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getTotalVatOrBuilder(
      int index);

  /**
   * <pre>
   * Model metadata
   * </pre>
   *
   * <code>.ssn.type.ModelSpec model_metadata = 3 [json_name = "modelMetadata"];</code>
   * @return Whether the modelMetadata field is set.
   */
  boolean hasModelMetadata();
  /**
   * <pre>
   * Model metadata
   * </pre>
   *
   * <code>.ssn.type.ModelSpec model_metadata = 3 [json_name = "modelMetadata"];</code>
   * @return The modelMetadata.
   */
  ai.visma.ssn.type.ModelSpec getModelMetadata();
  /**
   * <pre>
   * Model metadata
   * </pre>
   *
   * <code>.ssn.type.ModelSpec model_metadata = 3 [json_name = "modelMetadata"];</code>
   */
  ai.visma.ssn.type.ModelSpecOrBuilder getModelMetadataOrBuilder();

  /**
   * <pre>
   * A reference to the page where the candidate was found.
   * </pre>
   *
   * <code>uint32 page_ref = 4 [json_name = "pageRef"];</code>
   * @return The pageRef.
   */
  int getPageRef();

  /**
   * <pre>
   * The vat distribution candidate excl vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getTotalExclVatList();
  /**
   * <pre>
   * The vat distribution candidate excl vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
   */
  ai.visma.ssn.type.Candidate getTotalExclVat(int index);
  /**
   * <pre>
   * The vat distribution candidate excl vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
   */
  int getTotalExclVatCount();
  /**
   * <pre>
   * The vat distribution candidate excl vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getTotalExclVatOrBuilderList();
  /**
   * <pre>
   * The vat distribution candidate excl vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getTotalExclVatOrBuilder(
      int index);

  /**
   * <pre>
   * The vat distribution candidate incl vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getTotalInclVatList();
  /**
   * <pre>
   * The vat distribution candidate incl vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
   */
  ai.visma.ssn.type.Candidate getTotalInclVat(int index);
  /**
   * <pre>
   * The vat distribution candidate incl vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
   */
  int getTotalInclVatCount();
  /**
   * <pre>
   * The vat distribution candidate incl vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getTotalInclVatOrBuilderList();
  /**
   * <pre>
   * The vat distribution candidate incl vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getTotalInclVatOrBuilder(
      int index);
}
