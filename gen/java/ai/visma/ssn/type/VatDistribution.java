// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ssn/type/candidate.proto
// Protobuf Java Version: 4.29.3

package ai.visma.ssn.type;

/**
 * Protobuf type {@code ssn.type.VatDistribution}
 */
public final class VatDistribution extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:ssn.type.VatDistribution)
    VatDistributionOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      VatDistribution.class.getName());
  }
  // Use VatDistribution.newBuilder() to construct.
  private VatDistribution(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private VatDistribution() {
    percentage_ = java.util.Collections.emptyList();
    totalVat_ = java.util.Collections.emptyList();
    totalExclVat_ = java.util.Collections.emptyList();
    totalInclVat_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ai.visma.ssn.type.CandidateProto.internal_static_ssn_type_VatDistribution_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ai.visma.ssn.type.CandidateProto.internal_static_ssn_type_VatDistribution_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ai.visma.ssn.type.VatDistribution.class, ai.visma.ssn.type.VatDistribution.Builder.class);
  }

  private int bitField0_;
  public static final int PERCENTAGE_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<ai.visma.ssn.type.Candidate> percentage_;
  /**
   * <pre>
   * The vat distribution candidate percentage
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.visma.ssn.type.Candidate> getPercentageList() {
    return percentage_;
  }
  /**
   * <pre>
   * The vat distribution candidate percentage
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getPercentageOrBuilderList() {
    return percentage_;
  }
  /**
   * <pre>
   * The vat distribution candidate percentage
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
   */
  @java.lang.Override
  public int getPercentageCount() {
    return percentage_.size();
  }
  /**
   * <pre>
   * The vat distribution candidate percentage
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.Candidate getPercentage(int index) {
    return percentage_.get(index);
  }
  /**
   * <pre>
   * The vat distribution candidate percentage
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.CandidateOrBuilder getPercentageOrBuilder(
      int index) {
    return percentage_.get(index);
  }

  public static final int TOTAL_VAT_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<ai.visma.ssn.type.Candidate> totalVat_;
  /**
   * <pre>
   * The vat distribution candidate
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.visma.ssn.type.Candidate> getTotalVatList() {
    return totalVat_;
  }
  /**
   * <pre>
   * The vat distribution candidate
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getTotalVatOrBuilderList() {
    return totalVat_;
  }
  /**
   * <pre>
   * The vat distribution candidate
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
   */
  @java.lang.Override
  public int getTotalVatCount() {
    return totalVat_.size();
  }
  /**
   * <pre>
   * The vat distribution candidate
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.Candidate getTotalVat(int index) {
    return totalVat_.get(index);
  }
  /**
   * <pre>
   * The vat distribution candidate
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.CandidateOrBuilder getTotalVatOrBuilder(
      int index) {
    return totalVat_.get(index);
  }

  public static final int MODEL_METADATA_FIELD_NUMBER = 3;
  private ai.visma.ssn.type.ModelSpec modelMetadata_;
  /**
   * <pre>
   * Model metadata
   * </pre>
   *
   * <code>.ssn.type.ModelSpec model_metadata = 3 [json_name = "modelMetadata"];</code>
   * @return Whether the modelMetadata field is set.
   */
  @java.lang.Override
  public boolean hasModelMetadata() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Model metadata
   * </pre>
   *
   * <code>.ssn.type.ModelSpec model_metadata = 3 [json_name = "modelMetadata"];</code>
   * @return The modelMetadata.
   */
  @java.lang.Override
  public ai.visma.ssn.type.ModelSpec getModelMetadata() {
    return modelMetadata_ == null ? ai.visma.ssn.type.ModelSpec.getDefaultInstance() : modelMetadata_;
  }
  /**
   * <pre>
   * Model metadata
   * </pre>
   *
   * <code>.ssn.type.ModelSpec model_metadata = 3 [json_name = "modelMetadata"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.ModelSpecOrBuilder getModelMetadataOrBuilder() {
    return modelMetadata_ == null ? ai.visma.ssn.type.ModelSpec.getDefaultInstance() : modelMetadata_;
  }

  public static final int PAGE_REF_FIELD_NUMBER = 4;
  private int pageRef_ = 0;
  /**
   * <pre>
   * A reference to the page where the candidate was found.
   * </pre>
   *
   * <code>uint32 page_ref = 4 [json_name = "pageRef"];</code>
   * @return The pageRef.
   */
  @java.lang.Override
  public int getPageRef() {
    return pageRef_;
  }

  public static final int TOTAL_EXCL_VAT_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private java.util.List<ai.visma.ssn.type.Candidate> totalExclVat_;
  /**
   * <pre>
   * The vat distribution candidate excl vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.visma.ssn.type.Candidate> getTotalExclVatList() {
    return totalExclVat_;
  }
  /**
   * <pre>
   * The vat distribution candidate excl vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getTotalExclVatOrBuilderList() {
    return totalExclVat_;
  }
  /**
   * <pre>
   * The vat distribution candidate excl vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
   */
  @java.lang.Override
  public int getTotalExclVatCount() {
    return totalExclVat_.size();
  }
  /**
   * <pre>
   * The vat distribution candidate excl vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.Candidate getTotalExclVat(int index) {
    return totalExclVat_.get(index);
  }
  /**
   * <pre>
   * The vat distribution candidate excl vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.CandidateOrBuilder getTotalExclVatOrBuilder(
      int index) {
    return totalExclVat_.get(index);
  }

  public static final int TOTAL_INCL_VAT_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private java.util.List<ai.visma.ssn.type.Candidate> totalInclVat_;
  /**
   * <pre>
   * The vat distribution candidate incl vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.visma.ssn.type.Candidate> getTotalInclVatList() {
    return totalInclVat_;
  }
  /**
   * <pre>
   * The vat distribution candidate incl vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getTotalInclVatOrBuilderList() {
    return totalInclVat_;
  }
  /**
   * <pre>
   * The vat distribution candidate incl vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
   */
  @java.lang.Override
  public int getTotalInclVatCount() {
    return totalInclVat_.size();
  }
  /**
   * <pre>
   * The vat distribution candidate incl vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.Candidate getTotalInclVat(int index) {
    return totalInclVat_.get(index);
  }
  /**
   * <pre>
   * The vat distribution candidate incl vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.CandidateOrBuilder getTotalInclVatOrBuilder(
      int index) {
    return totalInclVat_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < percentage_.size(); i++) {
      output.writeMessage(1, percentage_.get(i));
    }
    for (int i = 0; i < totalVat_.size(); i++) {
      output.writeMessage(2, totalVat_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(3, getModelMetadata());
    }
    if (pageRef_ != 0) {
      output.writeUInt32(4, pageRef_);
    }
    for (int i = 0; i < totalExclVat_.size(); i++) {
      output.writeMessage(5, totalExclVat_.get(i));
    }
    for (int i = 0; i < totalInclVat_.size(); i++) {
      output.writeMessage(6, totalInclVat_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < percentage_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, percentage_.get(i));
    }
    for (int i = 0; i < totalVat_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, totalVat_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getModelMetadata());
    }
    if (pageRef_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, pageRef_);
    }
    for (int i = 0; i < totalExclVat_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, totalExclVat_.get(i));
    }
    for (int i = 0; i < totalInclVat_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, totalInclVat_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ai.visma.ssn.type.VatDistribution)) {
      return super.equals(obj);
    }
    ai.visma.ssn.type.VatDistribution other = (ai.visma.ssn.type.VatDistribution) obj;

    if (!getPercentageList()
        .equals(other.getPercentageList())) return false;
    if (!getTotalVatList()
        .equals(other.getTotalVatList())) return false;
    if (hasModelMetadata() != other.hasModelMetadata()) return false;
    if (hasModelMetadata()) {
      if (!getModelMetadata()
          .equals(other.getModelMetadata())) return false;
    }
    if (getPageRef()
        != other.getPageRef()) return false;
    if (!getTotalExclVatList()
        .equals(other.getTotalExclVatList())) return false;
    if (!getTotalInclVatList()
        .equals(other.getTotalInclVatList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getPercentageCount() > 0) {
      hash = (37 * hash) + PERCENTAGE_FIELD_NUMBER;
      hash = (53 * hash) + getPercentageList().hashCode();
    }
    if (getTotalVatCount() > 0) {
      hash = (37 * hash) + TOTAL_VAT_FIELD_NUMBER;
      hash = (53 * hash) + getTotalVatList().hashCode();
    }
    if (hasModelMetadata()) {
      hash = (37 * hash) + MODEL_METADATA_FIELD_NUMBER;
      hash = (53 * hash) + getModelMetadata().hashCode();
    }
    hash = (37 * hash) + PAGE_REF_FIELD_NUMBER;
    hash = (53 * hash) + getPageRef();
    if (getTotalExclVatCount() > 0) {
      hash = (37 * hash) + TOTAL_EXCL_VAT_FIELD_NUMBER;
      hash = (53 * hash) + getTotalExclVatList().hashCode();
    }
    if (getTotalInclVatCount() > 0) {
      hash = (37 * hash) + TOTAL_INCL_VAT_FIELD_NUMBER;
      hash = (53 * hash) + getTotalInclVatList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ai.visma.ssn.type.VatDistribution parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.visma.ssn.type.VatDistribution parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.visma.ssn.type.VatDistribution parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.visma.ssn.type.VatDistribution parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.visma.ssn.type.VatDistribution parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.visma.ssn.type.VatDistribution parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.visma.ssn.type.VatDistribution parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static ai.visma.ssn.type.VatDistribution parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static ai.visma.ssn.type.VatDistribution parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static ai.visma.ssn.type.VatDistribution parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ai.visma.ssn.type.VatDistribution parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static ai.visma.ssn.type.VatDistribution parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ai.visma.ssn.type.VatDistribution prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code ssn.type.VatDistribution}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ssn.type.VatDistribution)
      ai.visma.ssn.type.VatDistributionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.visma.ssn.type.CandidateProto.internal_static_ssn_type_VatDistribution_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.visma.ssn.type.CandidateProto.internal_static_ssn_type_VatDistribution_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ai.visma.ssn.type.VatDistribution.class, ai.visma.ssn.type.VatDistribution.Builder.class);
    }

    // Construct using ai.visma.ssn.type.VatDistribution.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getPercentageFieldBuilder();
        getTotalVatFieldBuilder();
        getModelMetadataFieldBuilder();
        getTotalExclVatFieldBuilder();
        getTotalInclVatFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (percentageBuilder_ == null) {
        percentage_ = java.util.Collections.emptyList();
      } else {
        percentage_ = null;
        percentageBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      if (totalVatBuilder_ == null) {
        totalVat_ = java.util.Collections.emptyList();
      } else {
        totalVat_ = null;
        totalVatBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      modelMetadata_ = null;
      if (modelMetadataBuilder_ != null) {
        modelMetadataBuilder_.dispose();
        modelMetadataBuilder_ = null;
      }
      pageRef_ = 0;
      if (totalExclVatBuilder_ == null) {
        totalExclVat_ = java.util.Collections.emptyList();
      } else {
        totalExclVat_ = null;
        totalExclVatBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      if (totalInclVatBuilder_ == null) {
        totalInclVat_ = java.util.Collections.emptyList();
      } else {
        totalInclVat_ = null;
        totalInclVatBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ai.visma.ssn.type.CandidateProto.internal_static_ssn_type_VatDistribution_descriptor;
    }

    @java.lang.Override
    public ai.visma.ssn.type.VatDistribution getDefaultInstanceForType() {
      return ai.visma.ssn.type.VatDistribution.getDefaultInstance();
    }

    @java.lang.Override
    public ai.visma.ssn.type.VatDistribution build() {
      ai.visma.ssn.type.VatDistribution result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ai.visma.ssn.type.VatDistribution buildPartial() {
      ai.visma.ssn.type.VatDistribution result = new ai.visma.ssn.type.VatDistribution(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(ai.visma.ssn.type.VatDistribution result) {
      if (percentageBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          percentage_ = java.util.Collections.unmodifiableList(percentage_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.percentage_ = percentage_;
      } else {
        result.percentage_ = percentageBuilder_.build();
      }
      if (totalVatBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          totalVat_ = java.util.Collections.unmodifiableList(totalVat_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.totalVat_ = totalVat_;
      } else {
        result.totalVat_ = totalVatBuilder_.build();
      }
      if (totalExclVatBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          totalExclVat_ = java.util.Collections.unmodifiableList(totalExclVat_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.totalExclVat_ = totalExclVat_;
      } else {
        result.totalExclVat_ = totalExclVatBuilder_.build();
      }
      if (totalInclVatBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          totalInclVat_ = java.util.Collections.unmodifiableList(totalInclVat_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.totalInclVat_ = totalInclVat_;
      } else {
        result.totalInclVat_ = totalInclVatBuilder_.build();
      }
    }

    private void buildPartial0(ai.visma.ssn.type.VatDistribution result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.modelMetadata_ = modelMetadataBuilder_ == null
            ? modelMetadata_
            : modelMetadataBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.pageRef_ = pageRef_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ai.visma.ssn.type.VatDistribution) {
        return mergeFrom((ai.visma.ssn.type.VatDistribution)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ai.visma.ssn.type.VatDistribution other) {
      if (other == ai.visma.ssn.type.VatDistribution.getDefaultInstance()) return this;
      if (percentageBuilder_ == null) {
        if (!other.percentage_.isEmpty()) {
          if (percentage_.isEmpty()) {
            percentage_ = other.percentage_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePercentageIsMutable();
            percentage_.addAll(other.percentage_);
          }
          onChanged();
        }
      } else {
        if (!other.percentage_.isEmpty()) {
          if (percentageBuilder_.isEmpty()) {
            percentageBuilder_.dispose();
            percentageBuilder_ = null;
            percentage_ = other.percentage_;
            bitField0_ = (bitField0_ & ~0x00000001);
            percentageBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getPercentageFieldBuilder() : null;
          } else {
            percentageBuilder_.addAllMessages(other.percentage_);
          }
        }
      }
      if (totalVatBuilder_ == null) {
        if (!other.totalVat_.isEmpty()) {
          if (totalVat_.isEmpty()) {
            totalVat_ = other.totalVat_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTotalVatIsMutable();
            totalVat_.addAll(other.totalVat_);
          }
          onChanged();
        }
      } else {
        if (!other.totalVat_.isEmpty()) {
          if (totalVatBuilder_.isEmpty()) {
            totalVatBuilder_.dispose();
            totalVatBuilder_ = null;
            totalVat_ = other.totalVat_;
            bitField0_ = (bitField0_ & ~0x00000002);
            totalVatBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getTotalVatFieldBuilder() : null;
          } else {
            totalVatBuilder_.addAllMessages(other.totalVat_);
          }
        }
      }
      if (other.hasModelMetadata()) {
        mergeModelMetadata(other.getModelMetadata());
      }
      if (other.getPageRef() != 0) {
        setPageRef(other.getPageRef());
      }
      if (totalExclVatBuilder_ == null) {
        if (!other.totalExclVat_.isEmpty()) {
          if (totalExclVat_.isEmpty()) {
            totalExclVat_ = other.totalExclVat_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureTotalExclVatIsMutable();
            totalExclVat_.addAll(other.totalExclVat_);
          }
          onChanged();
        }
      } else {
        if (!other.totalExclVat_.isEmpty()) {
          if (totalExclVatBuilder_.isEmpty()) {
            totalExclVatBuilder_.dispose();
            totalExclVatBuilder_ = null;
            totalExclVat_ = other.totalExclVat_;
            bitField0_ = (bitField0_ & ~0x00000010);
            totalExclVatBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getTotalExclVatFieldBuilder() : null;
          } else {
            totalExclVatBuilder_.addAllMessages(other.totalExclVat_);
          }
        }
      }
      if (totalInclVatBuilder_ == null) {
        if (!other.totalInclVat_.isEmpty()) {
          if (totalInclVat_.isEmpty()) {
            totalInclVat_ = other.totalInclVat_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureTotalInclVatIsMutable();
            totalInclVat_.addAll(other.totalInclVat_);
          }
          onChanged();
        }
      } else {
        if (!other.totalInclVat_.isEmpty()) {
          if (totalInclVatBuilder_.isEmpty()) {
            totalInclVatBuilder_.dispose();
            totalInclVatBuilder_ = null;
            totalInclVat_ = other.totalInclVat_;
            bitField0_ = (bitField0_ & ~0x00000020);
            totalInclVatBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getTotalInclVatFieldBuilder() : null;
          } else {
            totalInclVatBuilder_.addAllMessages(other.totalInclVat_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              ai.visma.ssn.type.Candidate m =
                  input.readMessage(
                      ai.visma.ssn.type.Candidate.parser(),
                      extensionRegistry);
              if (percentageBuilder_ == null) {
                ensurePercentageIsMutable();
                percentage_.add(m);
              } else {
                percentageBuilder_.addMessage(m);
              }
              break;
            } // case 10
            case 18: {
              ai.visma.ssn.type.Candidate m =
                  input.readMessage(
                      ai.visma.ssn.type.Candidate.parser(),
                      extensionRegistry);
              if (totalVatBuilder_ == null) {
                ensureTotalVatIsMutable();
                totalVat_.add(m);
              } else {
                totalVatBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getModelMetadataFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              pageRef_ = input.readUInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 42: {
              ai.visma.ssn.type.Candidate m =
                  input.readMessage(
                      ai.visma.ssn.type.Candidate.parser(),
                      extensionRegistry);
              if (totalExclVatBuilder_ == null) {
                ensureTotalExclVatIsMutable();
                totalExclVat_.add(m);
              } else {
                totalExclVatBuilder_.addMessage(m);
              }
              break;
            } // case 42
            case 50: {
              ai.visma.ssn.type.Candidate m =
                  input.readMessage(
                      ai.visma.ssn.type.Candidate.parser(),
                      extensionRegistry);
              if (totalInclVatBuilder_ == null) {
                ensureTotalInclVatIsMutable();
                totalInclVat_.add(m);
              } else {
                totalInclVatBuilder_.addMessage(m);
              }
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.util.List<ai.visma.ssn.type.Candidate> percentage_ =
      java.util.Collections.emptyList();
    private void ensurePercentageIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        percentage_ = new java.util.ArrayList<ai.visma.ssn.type.Candidate>(percentage_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> percentageBuilder_;

    /**
     * <pre>
     * The vat distribution candidate percentage
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate> getPercentageList() {
      if (percentageBuilder_ == null) {
        return java.util.Collections.unmodifiableList(percentage_);
      } else {
        return percentageBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The vat distribution candidate percentage
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
     */
    public int getPercentageCount() {
      if (percentageBuilder_ == null) {
        return percentage_.size();
      } else {
        return percentageBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The vat distribution candidate percentage
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
     */
    public ai.visma.ssn.type.Candidate getPercentage(int index) {
      if (percentageBuilder_ == null) {
        return percentage_.get(index);
      } else {
        return percentageBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The vat distribution candidate percentage
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
     */
    public Builder setPercentage(
        int index, ai.visma.ssn.type.Candidate value) {
      if (percentageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePercentageIsMutable();
        percentage_.set(index, value);
        onChanged();
      } else {
        percentageBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate percentage
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
     */
    public Builder setPercentage(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (percentageBuilder_ == null) {
        ensurePercentageIsMutable();
        percentage_.set(index, builderForValue.build());
        onChanged();
      } else {
        percentageBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate percentage
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
     */
    public Builder addPercentage(ai.visma.ssn.type.Candidate value) {
      if (percentageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePercentageIsMutable();
        percentage_.add(value);
        onChanged();
      } else {
        percentageBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate percentage
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
     */
    public Builder addPercentage(
        int index, ai.visma.ssn.type.Candidate value) {
      if (percentageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePercentageIsMutable();
        percentage_.add(index, value);
        onChanged();
      } else {
        percentageBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate percentage
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
     */
    public Builder addPercentage(
        ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (percentageBuilder_ == null) {
        ensurePercentageIsMutable();
        percentage_.add(builderForValue.build());
        onChanged();
      } else {
        percentageBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate percentage
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
     */
    public Builder addPercentage(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (percentageBuilder_ == null) {
        ensurePercentageIsMutable();
        percentage_.add(index, builderForValue.build());
        onChanged();
      } else {
        percentageBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate percentage
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
     */
    public Builder addAllPercentage(
        java.lang.Iterable<? extends ai.visma.ssn.type.Candidate> values) {
      if (percentageBuilder_ == null) {
        ensurePercentageIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, percentage_);
        onChanged();
      } else {
        percentageBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate percentage
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
     */
    public Builder clearPercentage() {
      if (percentageBuilder_ == null) {
        percentage_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        percentageBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate percentage
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
     */
    public Builder removePercentage(int index) {
      if (percentageBuilder_ == null) {
        ensurePercentageIsMutable();
        percentage_.remove(index);
        onChanged();
      } else {
        percentageBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate percentage
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder getPercentageBuilder(
        int index) {
      return getPercentageFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The vat distribution candidate percentage
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
     */
    public ai.visma.ssn.type.CandidateOrBuilder getPercentageOrBuilder(
        int index) {
      if (percentageBuilder_ == null) {
        return percentage_.get(index);  } else {
        return percentageBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The vat distribution candidate percentage
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
     */
    public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
         getPercentageOrBuilderList() {
      if (percentageBuilder_ != null) {
        return percentageBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(percentage_);
      }
    }
    /**
     * <pre>
     * The vat distribution candidate percentage
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addPercentageBuilder() {
      return getPercentageFieldBuilder().addBuilder(
          ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * The vat distribution candidate percentage
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addPercentageBuilder(
        int index) {
      return getPercentageFieldBuilder().addBuilder(
          index, ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * The vat distribution candidate percentage
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage = 1 [json_name = "percentage"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate.Builder> 
         getPercentageBuilderList() {
      return getPercentageFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> 
        getPercentageFieldBuilder() {
      if (percentageBuilder_ == null) {
        percentageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder>(
                percentage_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        percentage_ = null;
      }
      return percentageBuilder_;
    }

    private java.util.List<ai.visma.ssn.type.Candidate> totalVat_ =
      java.util.Collections.emptyList();
    private void ensureTotalVatIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        totalVat_ = new java.util.ArrayList<ai.visma.ssn.type.Candidate>(totalVat_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> totalVatBuilder_;

    /**
     * <pre>
     * The vat distribution candidate
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate> getTotalVatList() {
      if (totalVatBuilder_ == null) {
        return java.util.Collections.unmodifiableList(totalVat_);
      } else {
        return totalVatBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The vat distribution candidate
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
     */
    public int getTotalVatCount() {
      if (totalVatBuilder_ == null) {
        return totalVat_.size();
      } else {
        return totalVatBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The vat distribution candidate
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
     */
    public ai.visma.ssn.type.Candidate getTotalVat(int index) {
      if (totalVatBuilder_ == null) {
        return totalVat_.get(index);
      } else {
        return totalVatBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The vat distribution candidate
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
     */
    public Builder setTotalVat(
        int index, ai.visma.ssn.type.Candidate value) {
      if (totalVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalVatIsMutable();
        totalVat_.set(index, value);
        onChanged();
      } else {
        totalVatBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
     */
    public Builder setTotalVat(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalVatBuilder_ == null) {
        ensureTotalVatIsMutable();
        totalVat_.set(index, builderForValue.build());
        onChanged();
      } else {
        totalVatBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
     */
    public Builder addTotalVat(ai.visma.ssn.type.Candidate value) {
      if (totalVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalVatIsMutable();
        totalVat_.add(value);
        onChanged();
      } else {
        totalVatBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
     */
    public Builder addTotalVat(
        int index, ai.visma.ssn.type.Candidate value) {
      if (totalVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalVatIsMutable();
        totalVat_.add(index, value);
        onChanged();
      } else {
        totalVatBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
     */
    public Builder addTotalVat(
        ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalVatBuilder_ == null) {
        ensureTotalVatIsMutable();
        totalVat_.add(builderForValue.build());
        onChanged();
      } else {
        totalVatBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
     */
    public Builder addTotalVat(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalVatBuilder_ == null) {
        ensureTotalVatIsMutable();
        totalVat_.add(index, builderForValue.build());
        onChanged();
      } else {
        totalVatBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
     */
    public Builder addAllTotalVat(
        java.lang.Iterable<? extends ai.visma.ssn.type.Candidate> values) {
      if (totalVatBuilder_ == null) {
        ensureTotalVatIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, totalVat_);
        onChanged();
      } else {
        totalVatBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
     */
    public Builder clearTotalVat() {
      if (totalVatBuilder_ == null) {
        totalVat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        totalVatBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
     */
    public Builder removeTotalVat(int index) {
      if (totalVatBuilder_ == null) {
        ensureTotalVatIsMutable();
        totalVat_.remove(index);
        onChanged();
      } else {
        totalVatBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder getTotalVatBuilder(
        int index) {
      return getTotalVatFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The vat distribution candidate
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
     */
    public ai.visma.ssn.type.CandidateOrBuilder getTotalVatOrBuilder(
        int index) {
      if (totalVatBuilder_ == null) {
        return totalVat_.get(index);  } else {
        return totalVatBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The vat distribution candidate
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
     */
    public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
         getTotalVatOrBuilderList() {
      if (totalVatBuilder_ != null) {
        return totalVatBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(totalVat_);
      }
    }
    /**
     * <pre>
     * The vat distribution candidate
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addTotalVatBuilder() {
      return getTotalVatFieldBuilder().addBuilder(
          ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * The vat distribution candidate
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addTotalVatBuilder(
        int index) {
      return getTotalVatFieldBuilder().addBuilder(
          index, ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * The vat distribution candidate
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 2 [json_name = "totalVat"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate.Builder> 
         getTotalVatBuilderList() {
      return getTotalVatFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> 
        getTotalVatFieldBuilder() {
      if (totalVatBuilder_ == null) {
        totalVatBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder>(
                totalVat_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        totalVat_ = null;
      }
      return totalVatBuilder_;
    }

    private ai.visma.ssn.type.ModelSpec modelMetadata_;
    private com.google.protobuf.SingleFieldBuilder<
        ai.visma.ssn.type.ModelSpec, ai.visma.ssn.type.ModelSpec.Builder, ai.visma.ssn.type.ModelSpecOrBuilder> modelMetadataBuilder_;
    /**
     * <pre>
     * Model metadata
     * </pre>
     *
     * <code>.ssn.type.ModelSpec model_metadata = 3 [json_name = "modelMetadata"];</code>
     * @return Whether the modelMetadata field is set.
     */
    public boolean hasModelMetadata() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Model metadata
     * </pre>
     *
     * <code>.ssn.type.ModelSpec model_metadata = 3 [json_name = "modelMetadata"];</code>
     * @return The modelMetadata.
     */
    public ai.visma.ssn.type.ModelSpec getModelMetadata() {
      if (modelMetadataBuilder_ == null) {
        return modelMetadata_ == null ? ai.visma.ssn.type.ModelSpec.getDefaultInstance() : modelMetadata_;
      } else {
        return modelMetadataBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Model metadata
     * </pre>
     *
     * <code>.ssn.type.ModelSpec model_metadata = 3 [json_name = "modelMetadata"];</code>
     */
    public Builder setModelMetadata(ai.visma.ssn.type.ModelSpec value) {
      if (modelMetadataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        modelMetadata_ = value;
      } else {
        modelMetadataBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Model metadata
     * </pre>
     *
     * <code>.ssn.type.ModelSpec model_metadata = 3 [json_name = "modelMetadata"];</code>
     */
    public Builder setModelMetadata(
        ai.visma.ssn.type.ModelSpec.Builder builderForValue) {
      if (modelMetadataBuilder_ == null) {
        modelMetadata_ = builderForValue.build();
      } else {
        modelMetadataBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Model metadata
     * </pre>
     *
     * <code>.ssn.type.ModelSpec model_metadata = 3 [json_name = "modelMetadata"];</code>
     */
    public Builder mergeModelMetadata(ai.visma.ssn.type.ModelSpec value) {
      if (modelMetadataBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          modelMetadata_ != null &&
          modelMetadata_ != ai.visma.ssn.type.ModelSpec.getDefaultInstance()) {
          getModelMetadataBuilder().mergeFrom(value);
        } else {
          modelMetadata_ = value;
        }
      } else {
        modelMetadataBuilder_.mergeFrom(value);
      }
      if (modelMetadata_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Model metadata
     * </pre>
     *
     * <code>.ssn.type.ModelSpec model_metadata = 3 [json_name = "modelMetadata"];</code>
     */
    public Builder clearModelMetadata() {
      bitField0_ = (bitField0_ & ~0x00000004);
      modelMetadata_ = null;
      if (modelMetadataBuilder_ != null) {
        modelMetadataBuilder_.dispose();
        modelMetadataBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Model metadata
     * </pre>
     *
     * <code>.ssn.type.ModelSpec model_metadata = 3 [json_name = "modelMetadata"];</code>
     */
    public ai.visma.ssn.type.ModelSpec.Builder getModelMetadataBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getModelMetadataFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Model metadata
     * </pre>
     *
     * <code>.ssn.type.ModelSpec model_metadata = 3 [json_name = "modelMetadata"];</code>
     */
    public ai.visma.ssn.type.ModelSpecOrBuilder getModelMetadataOrBuilder() {
      if (modelMetadataBuilder_ != null) {
        return modelMetadataBuilder_.getMessageOrBuilder();
      } else {
        return modelMetadata_ == null ?
            ai.visma.ssn.type.ModelSpec.getDefaultInstance() : modelMetadata_;
      }
    }
    /**
     * <pre>
     * Model metadata
     * </pre>
     *
     * <code>.ssn.type.ModelSpec model_metadata = 3 [json_name = "modelMetadata"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        ai.visma.ssn.type.ModelSpec, ai.visma.ssn.type.ModelSpec.Builder, ai.visma.ssn.type.ModelSpecOrBuilder> 
        getModelMetadataFieldBuilder() {
      if (modelMetadataBuilder_ == null) {
        modelMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            ai.visma.ssn.type.ModelSpec, ai.visma.ssn.type.ModelSpec.Builder, ai.visma.ssn.type.ModelSpecOrBuilder>(
                getModelMetadata(),
                getParentForChildren(),
                isClean());
        modelMetadata_ = null;
      }
      return modelMetadataBuilder_;
    }

    private int pageRef_ ;
    /**
     * <pre>
     * A reference to the page where the candidate was found.
     * </pre>
     *
     * <code>uint32 page_ref = 4 [json_name = "pageRef"];</code>
     * @return The pageRef.
     */
    @java.lang.Override
    public int getPageRef() {
      return pageRef_;
    }
    /**
     * <pre>
     * A reference to the page where the candidate was found.
     * </pre>
     *
     * <code>uint32 page_ref = 4 [json_name = "pageRef"];</code>
     * @param value The pageRef to set.
     * @return This builder for chaining.
     */
    public Builder setPageRef(int value) {

      pageRef_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A reference to the page where the candidate was found.
     * </pre>
     *
     * <code>uint32 page_ref = 4 [json_name = "pageRef"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPageRef() {
      bitField0_ = (bitField0_ & ~0x00000008);
      pageRef_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<ai.visma.ssn.type.Candidate> totalExclVat_ =
      java.util.Collections.emptyList();
    private void ensureTotalExclVatIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        totalExclVat_ = new java.util.ArrayList<ai.visma.ssn.type.Candidate>(totalExclVat_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> totalExclVatBuilder_;

    /**
     * <pre>
     * The vat distribution candidate excl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate> getTotalExclVatList() {
      if (totalExclVatBuilder_ == null) {
        return java.util.Collections.unmodifiableList(totalExclVat_);
      } else {
        return totalExclVatBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The vat distribution candidate excl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
     */
    public int getTotalExclVatCount() {
      if (totalExclVatBuilder_ == null) {
        return totalExclVat_.size();
      } else {
        return totalExclVatBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The vat distribution candidate excl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate getTotalExclVat(int index) {
      if (totalExclVatBuilder_ == null) {
        return totalExclVat_.get(index);
      } else {
        return totalExclVatBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The vat distribution candidate excl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
     */
    public Builder setTotalExclVat(
        int index, ai.visma.ssn.type.Candidate value) {
      if (totalExclVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalExclVatIsMutable();
        totalExclVat_.set(index, value);
        onChanged();
      } else {
        totalExclVatBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate excl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
     */
    public Builder setTotalExclVat(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalExclVatBuilder_ == null) {
        ensureTotalExclVatIsMutable();
        totalExclVat_.set(index, builderForValue.build());
        onChanged();
      } else {
        totalExclVatBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate excl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
     */
    public Builder addTotalExclVat(ai.visma.ssn.type.Candidate value) {
      if (totalExclVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalExclVatIsMutable();
        totalExclVat_.add(value);
        onChanged();
      } else {
        totalExclVatBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate excl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
     */
    public Builder addTotalExclVat(
        int index, ai.visma.ssn.type.Candidate value) {
      if (totalExclVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalExclVatIsMutable();
        totalExclVat_.add(index, value);
        onChanged();
      } else {
        totalExclVatBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate excl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
     */
    public Builder addTotalExclVat(
        ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalExclVatBuilder_ == null) {
        ensureTotalExclVatIsMutable();
        totalExclVat_.add(builderForValue.build());
        onChanged();
      } else {
        totalExclVatBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate excl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
     */
    public Builder addTotalExclVat(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalExclVatBuilder_ == null) {
        ensureTotalExclVatIsMutable();
        totalExclVat_.add(index, builderForValue.build());
        onChanged();
      } else {
        totalExclVatBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate excl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
     */
    public Builder addAllTotalExclVat(
        java.lang.Iterable<? extends ai.visma.ssn.type.Candidate> values) {
      if (totalExclVatBuilder_ == null) {
        ensureTotalExclVatIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, totalExclVat_);
        onChanged();
      } else {
        totalExclVatBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate excl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
     */
    public Builder clearTotalExclVat() {
      if (totalExclVatBuilder_ == null) {
        totalExclVat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        totalExclVatBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate excl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
     */
    public Builder removeTotalExclVat(int index) {
      if (totalExclVatBuilder_ == null) {
        ensureTotalExclVatIsMutable();
        totalExclVat_.remove(index);
        onChanged();
      } else {
        totalExclVatBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate excl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder getTotalExclVatBuilder(
        int index) {
      return getTotalExclVatFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The vat distribution candidate excl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
     */
    public ai.visma.ssn.type.CandidateOrBuilder getTotalExclVatOrBuilder(
        int index) {
      if (totalExclVatBuilder_ == null) {
        return totalExclVat_.get(index);  } else {
        return totalExclVatBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The vat distribution candidate excl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
     */
    public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
         getTotalExclVatOrBuilderList() {
      if (totalExclVatBuilder_ != null) {
        return totalExclVatBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(totalExclVat_);
      }
    }
    /**
     * <pre>
     * The vat distribution candidate excl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addTotalExclVatBuilder() {
      return getTotalExclVatFieldBuilder().addBuilder(
          ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * The vat distribution candidate excl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addTotalExclVatBuilder(
        int index) {
      return getTotalExclVatFieldBuilder().addBuilder(
          index, ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * The vat distribution candidate excl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 5 [json_name = "totalExclVat"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate.Builder> 
         getTotalExclVatBuilderList() {
      return getTotalExclVatFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> 
        getTotalExclVatFieldBuilder() {
      if (totalExclVatBuilder_ == null) {
        totalExclVatBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder>(
                totalExclVat_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        totalExclVat_ = null;
      }
      return totalExclVatBuilder_;
    }

    private java.util.List<ai.visma.ssn.type.Candidate> totalInclVat_ =
      java.util.Collections.emptyList();
    private void ensureTotalInclVatIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        totalInclVat_ = new java.util.ArrayList<ai.visma.ssn.type.Candidate>(totalInclVat_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> totalInclVatBuilder_;

    /**
     * <pre>
     * The vat distribution candidate incl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate> getTotalInclVatList() {
      if (totalInclVatBuilder_ == null) {
        return java.util.Collections.unmodifiableList(totalInclVat_);
      } else {
        return totalInclVatBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The vat distribution candidate incl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
     */
    public int getTotalInclVatCount() {
      if (totalInclVatBuilder_ == null) {
        return totalInclVat_.size();
      } else {
        return totalInclVatBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The vat distribution candidate incl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate getTotalInclVat(int index) {
      if (totalInclVatBuilder_ == null) {
        return totalInclVat_.get(index);
      } else {
        return totalInclVatBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The vat distribution candidate incl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
     */
    public Builder setTotalInclVat(
        int index, ai.visma.ssn.type.Candidate value) {
      if (totalInclVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalInclVatIsMutable();
        totalInclVat_.set(index, value);
        onChanged();
      } else {
        totalInclVatBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate incl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
     */
    public Builder setTotalInclVat(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalInclVatBuilder_ == null) {
        ensureTotalInclVatIsMutable();
        totalInclVat_.set(index, builderForValue.build());
        onChanged();
      } else {
        totalInclVatBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate incl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
     */
    public Builder addTotalInclVat(ai.visma.ssn.type.Candidate value) {
      if (totalInclVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalInclVatIsMutable();
        totalInclVat_.add(value);
        onChanged();
      } else {
        totalInclVatBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate incl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
     */
    public Builder addTotalInclVat(
        int index, ai.visma.ssn.type.Candidate value) {
      if (totalInclVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalInclVatIsMutable();
        totalInclVat_.add(index, value);
        onChanged();
      } else {
        totalInclVatBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate incl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
     */
    public Builder addTotalInclVat(
        ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalInclVatBuilder_ == null) {
        ensureTotalInclVatIsMutable();
        totalInclVat_.add(builderForValue.build());
        onChanged();
      } else {
        totalInclVatBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate incl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
     */
    public Builder addTotalInclVat(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalInclVatBuilder_ == null) {
        ensureTotalInclVatIsMutable();
        totalInclVat_.add(index, builderForValue.build());
        onChanged();
      } else {
        totalInclVatBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate incl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
     */
    public Builder addAllTotalInclVat(
        java.lang.Iterable<? extends ai.visma.ssn.type.Candidate> values) {
      if (totalInclVatBuilder_ == null) {
        ensureTotalInclVatIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, totalInclVat_);
        onChanged();
      } else {
        totalInclVatBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate incl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
     */
    public Builder clearTotalInclVat() {
      if (totalInclVatBuilder_ == null) {
        totalInclVat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        totalInclVatBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate incl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
     */
    public Builder removeTotalInclVat(int index) {
      if (totalInclVatBuilder_ == null) {
        ensureTotalInclVatIsMutable();
        totalInclVat_.remove(index);
        onChanged();
      } else {
        totalInclVatBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The vat distribution candidate incl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder getTotalInclVatBuilder(
        int index) {
      return getTotalInclVatFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The vat distribution candidate incl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
     */
    public ai.visma.ssn.type.CandidateOrBuilder getTotalInclVatOrBuilder(
        int index) {
      if (totalInclVatBuilder_ == null) {
        return totalInclVat_.get(index);  } else {
        return totalInclVatBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The vat distribution candidate incl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
     */
    public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
         getTotalInclVatOrBuilderList() {
      if (totalInclVatBuilder_ != null) {
        return totalInclVatBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(totalInclVat_);
      }
    }
    /**
     * <pre>
     * The vat distribution candidate incl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addTotalInclVatBuilder() {
      return getTotalInclVatFieldBuilder().addBuilder(
          ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * The vat distribution candidate incl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addTotalInclVatBuilder(
        int index) {
      return getTotalInclVatFieldBuilder().addBuilder(
          index, ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * The vat distribution candidate incl vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 6 [json_name = "totalInclVat"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate.Builder> 
         getTotalInclVatBuilderList() {
      return getTotalInclVatFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> 
        getTotalInclVatFieldBuilder() {
      if (totalInclVatBuilder_ == null) {
        totalInclVatBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder>(
                totalInclVat_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        totalInclVat_ = null;
      }
      return totalInclVatBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:ssn.type.VatDistribution)
  }

  // @@protoc_insertion_point(class_scope:ssn.type.VatDistribution)
  private static final ai.visma.ssn.type.VatDistribution DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ai.visma.ssn.type.VatDistribution();
  }

  public static ai.visma.ssn.type.VatDistribution getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<VatDistribution>
      PARSER = new com.google.protobuf.AbstractParser<VatDistribution>() {
    @java.lang.Override
    public VatDistribution parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<VatDistribution> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VatDistribution> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ai.visma.ssn.type.VatDistribution getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

