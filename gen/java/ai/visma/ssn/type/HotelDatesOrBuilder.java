// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ssn/type/hotel_dates.proto
// Protobuf Java Version: 4.29.3

package ai.visma.ssn.type;

public interface HotelDatesOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ssn.type.HotelDates)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * checkInDate
   * ISO 8601 date, ie. a string of the format "YYYY-MM-DD"
   * Example: "2019-12-31"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate check_in_date = 1 [json_name = "checkInDate"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getCheckInDateList();
  /**
   * <pre>
   * checkInDate
   * ISO 8601 date, ie. a string of the format "YYYY-MM-DD"
   * Example: "2019-12-31"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate check_in_date = 1 [json_name = "checkInDate"];</code>
   */
  ai.visma.ssn.type.Candidate getCheckInDate(int index);
  /**
   * <pre>
   * checkInDate
   * ISO 8601 date, ie. a string of the format "YYYY-MM-DD"
   * Example: "2019-12-31"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate check_in_date = 1 [json_name = "checkInDate"];</code>
   */
  int getCheckInDateCount();
  /**
   * <pre>
   * checkInDate
   * ISO 8601 date, ie. a string of the format "YYYY-MM-DD"
   * Example: "2019-12-31"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate check_in_date = 1 [json_name = "checkInDate"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getCheckInDateOrBuilderList();
  /**
   * <pre>
   * checkInDate
   * ISO 8601 date, ie. a string of the format "YYYY-MM-DD"
   * Example: "2019-12-31"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate check_in_date = 1 [json_name = "checkInDate"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getCheckInDateOrBuilder(
      int index);

  /**
   * <pre>
   * checkOutDate
   * ISO 8601 date, ie. a string of the format "YYYY-MM-DD"
   * Example: "2019-12-31"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate check_out_date = 2 [json_name = "checkOutDate"];</code>
   */
  java.util.List<ai.visma.ssn.type.Candidate> 
      getCheckOutDateList();
  /**
   * <pre>
   * checkOutDate
   * ISO 8601 date, ie. a string of the format "YYYY-MM-DD"
   * Example: "2019-12-31"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate check_out_date = 2 [json_name = "checkOutDate"];</code>
   */
  ai.visma.ssn.type.Candidate getCheckOutDate(int index);
  /**
   * <pre>
   * checkOutDate
   * ISO 8601 date, ie. a string of the format "YYYY-MM-DD"
   * Example: "2019-12-31"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate check_out_date = 2 [json_name = "checkOutDate"];</code>
   */
  int getCheckOutDateCount();
  /**
   * <pre>
   * checkOutDate
   * ISO 8601 date, ie. a string of the format "YYYY-MM-DD"
   * Example: "2019-12-31"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate check_out_date = 2 [json_name = "checkOutDate"];</code>
   */
  java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getCheckOutDateOrBuilderList();
  /**
   * <pre>
   * checkOutDate
   * ISO 8601 date, ie. a string of the format "YYYY-MM-DD"
   * Example: "2019-12-31"
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate check_out_date = 2 [json_name = "checkOutDate"];</code>
   */
  ai.visma.ssn.type.CandidateOrBuilder getCheckOutDateOrBuilder(
      int index);
}
