// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ssn/type/candidate.proto
// Protobuf Java Version: 4.29.3

package ai.visma.ssn.type;

/**
 * Protobuf type {@code ssn.type.PurchaseLine}
 */
public final class PurchaseLine extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:ssn.type.PurchaseLine)
    PurchaseLineOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      PurchaseLine.class.getName());
  }
  // Use PurchaseLine.newBuilder() to construct.
  private PurchaseLine(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private PurchaseLine() {
    code_ = java.util.Collections.emptyList();
    description_ = java.util.Collections.emptyList();
    quantity_ = java.util.Collections.emptyList();
    itemNumber_ = java.util.Collections.emptyList();
    unit_ = java.util.Collections.emptyList();
    totalDiscount_ = java.util.Collections.emptyList();
    percentageDiscount_ = java.util.Collections.emptyList();
    totalInclVat_ = java.util.Collections.emptyList();
    totalExclVat_ = java.util.Collections.emptyList();
    totalVat_ = java.util.Collections.emptyList();
    percentageVat_ = java.util.Collections.emptyList();
    unitPriceInclVat_ = java.util.Collections.emptyList();
    unitPriceExclVat_ = java.util.Collections.emptyList();
    total_ = java.util.Collections.emptyList();
    unitPrice_ = java.util.Collections.emptyList();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ai.visma.ssn.type.CandidateProto.internal_static_ssn_type_PurchaseLine_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ai.visma.ssn.type.CandidateProto.internal_static_ssn_type_PurchaseLine_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ai.visma.ssn.type.PurchaseLine.class, ai.visma.ssn.type.PurchaseLine.Builder.class);
  }

  private int bitField0_;
  public static final int PAGE_REF_FIELD_NUMBER = 1;
  private int pageRef_ = 0;
  /**
   * <pre>
   * A reference to the page where the line was found.
   * page_ref start from 1.
   * </pre>
   *
   * <code>uint32 page_ref = 1 [json_name = "pageRef"];</code>
   * @return The pageRef.
   */
  @java.lang.Override
  public int getPageRef() {
    return pageRef_;
  }

  public static final int CODE_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<ai.visma.ssn.type.Candidate> code_;
  /**
   * <pre>
   * Code is an ID that supplier uses to identify the item
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.visma.ssn.type.Candidate> getCodeList() {
    return code_;
  }
  /**
   * <pre>
   * Code is an ID that supplier uses to identify the item
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getCodeOrBuilderList() {
    return code_;
  }
  /**
   * <pre>
   * Code is an ID that supplier uses to identify the item
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
   */
  @java.lang.Override
  public int getCodeCount() {
    return code_.size();
  }
  /**
   * <pre>
   * Code is an ID that supplier uses to identify the item
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.Candidate getCode(int index) {
    return code_.get(index);
  }
  /**
   * <pre>
   * Code is an ID that supplier uses to identify the item
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.CandidateOrBuilder getCodeOrBuilder(
      int index) {
    return code_.get(index);
  }

  public static final int DESCRIPTION_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<ai.visma.ssn.type.Candidate> description_;
  /**
   * <pre>
   * Description is a piece of text that describes the item
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.visma.ssn.type.Candidate> getDescriptionList() {
    return description_;
  }
  /**
   * <pre>
   * Description is a piece of text that describes the item
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getDescriptionOrBuilderList() {
    return description_;
  }
  /**
   * <pre>
   * Description is a piece of text that describes the item
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
   */
  @java.lang.Override
  public int getDescriptionCount() {
    return description_.size();
  }
  /**
   * <pre>
   * Description is a piece of text that describes the item
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.Candidate getDescription(int index) {
    return description_.get(index);
  }
  /**
   * <pre>
   * Description is a piece of text that describes the item
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.CandidateOrBuilder getDescriptionOrBuilder(
      int index) {
    return description_.get(index);
  }

  public static final int QUANTITY_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<ai.visma.ssn.type.Candidate> quantity_;
  /**
   * <pre>
   * Quantity is the number of items
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.visma.ssn.type.Candidate> getQuantityList() {
    return quantity_;
  }
  /**
   * <pre>
   * Quantity is the number of items
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getQuantityOrBuilderList() {
    return quantity_;
  }
  /**
   * <pre>
   * Quantity is the number of items
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
   */
  @java.lang.Override
  public int getQuantityCount() {
    return quantity_.size();
  }
  /**
   * <pre>
   * Quantity is the number of items
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.Candidate getQuantity(int index) {
    return quantity_.get(index);
  }
  /**
   * <pre>
   * Quantity is the number of items
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.CandidateOrBuilder getQuantityOrBuilder(
      int index) {
    return quantity_.get(index);
  }

  public static final int ITEM_NUMBER_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private java.util.List<ai.visma.ssn.type.Candidate> itemNumber_;
  /**
   * <pre>
   * ItemNumber is the number of the item
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.visma.ssn.type.Candidate> getItemNumberList() {
    return itemNumber_;
  }
  /**
   * <pre>
   * ItemNumber is the number of the item
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getItemNumberOrBuilderList() {
    return itemNumber_;
  }
  /**
   * <pre>
   * ItemNumber is the number of the item
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
   */
  @java.lang.Override
  public int getItemNumberCount() {
    return itemNumber_.size();
  }
  /**
   * <pre>
   * ItemNumber is the number of the item
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.Candidate getItemNumber(int index) {
    return itemNumber_.get(index);
  }
  /**
   * <pre>
   * ItemNumber is the number of the item
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.CandidateOrBuilder getItemNumberOrBuilder(
      int index) {
    return itemNumber_.get(index);
  }

  public static final int UNIT_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private java.util.List<ai.visma.ssn.type.Candidate> unit_;
  /**
   * <pre>
   * Unit is the unit of the item
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.visma.ssn.type.Candidate> getUnitList() {
    return unit_;
  }
  /**
   * <pre>
   * Unit is the unit of the item
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getUnitOrBuilderList() {
    return unit_;
  }
  /**
   * <pre>
   * Unit is the unit of the item
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
   */
  @java.lang.Override
  public int getUnitCount() {
    return unit_.size();
  }
  /**
   * <pre>
   * Unit is the unit of the item
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.Candidate getUnit(int index) {
    return unit_.get(index);
  }
  /**
   * <pre>
   * Unit is the unit of the item
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.CandidateOrBuilder getUnitOrBuilder(
      int index) {
    return unit_.get(index);
  }

  public static final int TOTAL_DISCOUNT_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private java.util.List<ai.visma.ssn.type.Candidate> totalDiscount_;
  /**
   * <pre>
   * Total discount is the total discount of the line
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.visma.ssn.type.Candidate> getTotalDiscountList() {
    return totalDiscount_;
  }
  /**
   * <pre>
   * Total discount is the total discount of the line
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getTotalDiscountOrBuilderList() {
    return totalDiscount_;
  }
  /**
   * <pre>
   * Total discount is the total discount of the line
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
   */
  @java.lang.Override
  public int getTotalDiscountCount() {
    return totalDiscount_.size();
  }
  /**
   * <pre>
   * Total discount is the total discount of the line
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.Candidate getTotalDiscount(int index) {
    return totalDiscount_.get(index);
  }
  /**
   * <pre>
   * Total discount is the total discount of the line
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.CandidateOrBuilder getTotalDiscountOrBuilder(
      int index) {
    return totalDiscount_.get(index);
  }

  public static final int PERCENTAGE_DISCOUNT_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private java.util.List<ai.visma.ssn.type.Candidate> percentageDiscount_;
  /**
   * <pre>
   * Percentage discount is the percentage discount of the line
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.visma.ssn.type.Candidate> getPercentageDiscountList() {
    return percentageDiscount_;
  }
  /**
   * <pre>
   * Percentage discount is the percentage discount of the line
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getPercentageDiscountOrBuilderList() {
    return percentageDiscount_;
  }
  /**
   * <pre>
   * Percentage discount is the percentage discount of the line
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
   */
  @java.lang.Override
  public int getPercentageDiscountCount() {
    return percentageDiscount_.size();
  }
  /**
   * <pre>
   * Percentage discount is the percentage discount of the line
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.Candidate getPercentageDiscount(int index) {
    return percentageDiscount_.get(index);
  }
  /**
   * <pre>
   * Percentage discount is the percentage discount of the line
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.CandidateOrBuilder getPercentageDiscountOrBuilder(
      int index) {
    return percentageDiscount_.get(index);
  }

  public static final int TOTAL_INCL_VAT_FIELD_NUMBER = 9;
  @SuppressWarnings("serial")
  private java.util.List<ai.visma.ssn.type.Candidate> totalInclVat_;
  /**
   * <pre>
   * Total incl vat is the total price of the line including vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.visma.ssn.type.Candidate> getTotalInclVatList() {
    return totalInclVat_;
  }
  /**
   * <pre>
   * Total incl vat is the total price of the line including vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getTotalInclVatOrBuilderList() {
    return totalInclVat_;
  }
  /**
   * <pre>
   * Total incl vat is the total price of the line including vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
   */
  @java.lang.Override
  public int getTotalInclVatCount() {
    return totalInclVat_.size();
  }
  /**
   * <pre>
   * Total incl vat is the total price of the line including vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.Candidate getTotalInclVat(int index) {
    return totalInclVat_.get(index);
  }
  /**
   * <pre>
   * Total incl vat is the total price of the line including vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.CandidateOrBuilder getTotalInclVatOrBuilder(
      int index) {
    return totalInclVat_.get(index);
  }

  public static final int TOTAL_EXCL_VAT_FIELD_NUMBER = 10;
  @SuppressWarnings("serial")
  private java.util.List<ai.visma.ssn.type.Candidate> totalExclVat_;
  /**
   * <pre>
   * Total excl vat is the total price of the line excluding vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.visma.ssn.type.Candidate> getTotalExclVatList() {
    return totalExclVat_;
  }
  /**
   * <pre>
   * Total excl vat is the total price of the line excluding vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getTotalExclVatOrBuilderList() {
    return totalExclVat_;
  }
  /**
   * <pre>
   * Total excl vat is the total price of the line excluding vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
   */
  @java.lang.Override
  public int getTotalExclVatCount() {
    return totalExclVat_.size();
  }
  /**
   * <pre>
   * Total excl vat is the total price of the line excluding vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.Candidate getTotalExclVat(int index) {
    return totalExclVat_.get(index);
  }
  /**
   * <pre>
   * Total excl vat is the total price of the line excluding vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.CandidateOrBuilder getTotalExclVatOrBuilder(
      int index) {
    return totalExclVat_.get(index);
  }

  public static final int TOTAL_VAT_FIELD_NUMBER = 11;
  @SuppressWarnings("serial")
  private java.util.List<ai.visma.ssn.type.Candidate> totalVat_;
  /**
   * <pre>
   * Total vat is the total vat of the line
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.visma.ssn.type.Candidate> getTotalVatList() {
    return totalVat_;
  }
  /**
   * <pre>
   * Total vat is the total vat of the line
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getTotalVatOrBuilderList() {
    return totalVat_;
  }
  /**
   * <pre>
   * Total vat is the total vat of the line
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
   */
  @java.lang.Override
  public int getTotalVatCount() {
    return totalVat_.size();
  }
  /**
   * <pre>
   * Total vat is the total vat of the line
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.Candidate getTotalVat(int index) {
    return totalVat_.get(index);
  }
  /**
   * <pre>
   * Total vat is the total vat of the line
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.CandidateOrBuilder getTotalVatOrBuilder(
      int index) {
    return totalVat_.get(index);
  }

  public static final int PERCENTAGE_VAT_FIELD_NUMBER = 12;
  @SuppressWarnings("serial")
  private java.util.List<ai.visma.ssn.type.Candidate> percentageVat_;
  /**
   * <pre>
   * Percentage vat is the percentage vat of the line
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.visma.ssn.type.Candidate> getPercentageVatList() {
    return percentageVat_;
  }
  /**
   * <pre>
   * Percentage vat is the percentage vat of the line
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getPercentageVatOrBuilderList() {
    return percentageVat_;
  }
  /**
   * <pre>
   * Percentage vat is the percentage vat of the line
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
   */
  @java.lang.Override
  public int getPercentageVatCount() {
    return percentageVat_.size();
  }
  /**
   * <pre>
   * Percentage vat is the percentage vat of the line
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.Candidate getPercentageVat(int index) {
    return percentageVat_.get(index);
  }
  /**
   * <pre>
   * Percentage vat is the percentage vat of the line
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.CandidateOrBuilder getPercentageVatOrBuilder(
      int index) {
    return percentageVat_.get(index);
  }

  public static final int UNIT_PRICE_INCL_VAT_FIELD_NUMBER = 13;
  @SuppressWarnings("serial")
  private java.util.List<ai.visma.ssn.type.Candidate> unitPriceInclVat_;
  /**
   * <pre>
   * Unit price incl vat is the unit price of the line including vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.visma.ssn.type.Candidate> getUnitPriceInclVatList() {
    return unitPriceInclVat_;
  }
  /**
   * <pre>
   * Unit price incl vat is the unit price of the line including vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getUnitPriceInclVatOrBuilderList() {
    return unitPriceInclVat_;
  }
  /**
   * <pre>
   * Unit price incl vat is the unit price of the line including vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
   */
  @java.lang.Override
  public int getUnitPriceInclVatCount() {
    return unitPriceInclVat_.size();
  }
  /**
   * <pre>
   * Unit price incl vat is the unit price of the line including vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.Candidate getUnitPriceInclVat(int index) {
    return unitPriceInclVat_.get(index);
  }
  /**
   * <pre>
   * Unit price incl vat is the unit price of the line including vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.CandidateOrBuilder getUnitPriceInclVatOrBuilder(
      int index) {
    return unitPriceInclVat_.get(index);
  }

  public static final int UNIT_PRICE_EXCL_VAT_FIELD_NUMBER = 14;
  @SuppressWarnings("serial")
  private java.util.List<ai.visma.ssn.type.Candidate> unitPriceExclVat_;
  /**
   * <pre>
   * Unit price excl vat is the unit price of the line excluding vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.visma.ssn.type.Candidate> getUnitPriceExclVatList() {
    return unitPriceExclVat_;
  }
  /**
   * <pre>
   * Unit price excl vat is the unit price of the line excluding vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getUnitPriceExclVatOrBuilderList() {
    return unitPriceExclVat_;
  }
  /**
   * <pre>
   * Unit price excl vat is the unit price of the line excluding vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
   */
  @java.lang.Override
  public int getUnitPriceExclVatCount() {
    return unitPriceExclVat_.size();
  }
  /**
   * <pre>
   * Unit price excl vat is the unit price of the line excluding vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.Candidate getUnitPriceExclVat(int index) {
    return unitPriceExclVat_.get(index);
  }
  /**
   * <pre>
   * Unit price excl vat is the unit price of the line excluding vat
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.CandidateOrBuilder getUnitPriceExclVatOrBuilder(
      int index) {
    return unitPriceExclVat_.get(index);
  }

  public static final int TOTAL_FIELD_NUMBER = 15;
  @SuppressWarnings("serial")
  private java.util.List<ai.visma.ssn.type.Candidate> total_;
  /**
   * <pre>
   * Total is the total price of the line (with/without vat)
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.visma.ssn.type.Candidate> getTotalList() {
    return total_;
  }
  /**
   * <pre>
   * Total is the total price of the line (with/without vat)
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getTotalOrBuilderList() {
    return total_;
  }
  /**
   * <pre>
   * Total is the total price of the line (with/without vat)
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
   */
  @java.lang.Override
  public int getTotalCount() {
    return total_.size();
  }
  /**
   * <pre>
   * Total is the total price of the line (with/without vat)
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.Candidate getTotal(int index) {
    return total_.get(index);
  }
  /**
   * <pre>
   * Total is the total price of the line (with/without vat)
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.CandidateOrBuilder getTotalOrBuilder(
      int index) {
    return total_.get(index);
  }

  public static final int UNIT_PRICE_FIELD_NUMBER = 16;
  @SuppressWarnings("serial")
  private java.util.List<ai.visma.ssn.type.Candidate> unitPrice_;
  /**
   * <pre>
   * Unit price is the unit price of the line (with/without vat)
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
   */
  @java.lang.Override
  public java.util.List<ai.visma.ssn.type.Candidate> getUnitPriceList() {
    return unitPrice_;
  }
  /**
   * <pre>
   * Unit price is the unit price of the line (with/without vat)
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
      getUnitPriceOrBuilderList() {
    return unitPrice_;
  }
  /**
   * <pre>
   * Unit price is the unit price of the line (with/without vat)
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
   */
  @java.lang.Override
  public int getUnitPriceCount() {
    return unitPrice_.size();
  }
  /**
   * <pre>
   * Unit price is the unit price of the line (with/without vat)
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.Candidate getUnitPrice(int index) {
    return unitPrice_.get(index);
  }
  /**
   * <pre>
   * Unit price is the unit price of the line (with/without vat)
   * </pre>
   *
   * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.CandidateOrBuilder getUnitPriceOrBuilder(
      int index) {
    return unitPrice_.get(index);
  }

  public static final int MODEL_METADATA_FIELD_NUMBER = 17;
  private ai.visma.ssn.type.ModelSpec modelMetadata_;
  /**
   * <pre>
   * Model metadata
   * </pre>
   *
   * <code>.ssn.type.ModelSpec model_metadata = 17 [json_name = "modelMetadata"];</code>
   * @return Whether the modelMetadata field is set.
   */
  @java.lang.Override
  public boolean hasModelMetadata() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Model metadata
   * </pre>
   *
   * <code>.ssn.type.ModelSpec model_metadata = 17 [json_name = "modelMetadata"];</code>
   * @return The modelMetadata.
   */
  @java.lang.Override
  public ai.visma.ssn.type.ModelSpec getModelMetadata() {
    return modelMetadata_ == null ? ai.visma.ssn.type.ModelSpec.getDefaultInstance() : modelMetadata_;
  }
  /**
   * <pre>
   * Model metadata
   * </pre>
   *
   * <code>.ssn.type.ModelSpec model_metadata = 17 [json_name = "modelMetadata"];</code>
   */
  @java.lang.Override
  public ai.visma.ssn.type.ModelSpecOrBuilder getModelMetadataOrBuilder() {
    return modelMetadata_ == null ? ai.visma.ssn.type.ModelSpec.getDefaultInstance() : modelMetadata_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (pageRef_ != 0) {
      output.writeUInt32(1, pageRef_);
    }
    for (int i = 0; i < code_.size(); i++) {
      output.writeMessage(2, code_.get(i));
    }
    for (int i = 0; i < description_.size(); i++) {
      output.writeMessage(3, description_.get(i));
    }
    for (int i = 0; i < quantity_.size(); i++) {
      output.writeMessage(4, quantity_.get(i));
    }
    for (int i = 0; i < itemNumber_.size(); i++) {
      output.writeMessage(5, itemNumber_.get(i));
    }
    for (int i = 0; i < unit_.size(); i++) {
      output.writeMessage(6, unit_.get(i));
    }
    for (int i = 0; i < totalDiscount_.size(); i++) {
      output.writeMessage(7, totalDiscount_.get(i));
    }
    for (int i = 0; i < percentageDiscount_.size(); i++) {
      output.writeMessage(8, percentageDiscount_.get(i));
    }
    for (int i = 0; i < totalInclVat_.size(); i++) {
      output.writeMessage(9, totalInclVat_.get(i));
    }
    for (int i = 0; i < totalExclVat_.size(); i++) {
      output.writeMessage(10, totalExclVat_.get(i));
    }
    for (int i = 0; i < totalVat_.size(); i++) {
      output.writeMessage(11, totalVat_.get(i));
    }
    for (int i = 0; i < percentageVat_.size(); i++) {
      output.writeMessage(12, percentageVat_.get(i));
    }
    for (int i = 0; i < unitPriceInclVat_.size(); i++) {
      output.writeMessage(13, unitPriceInclVat_.get(i));
    }
    for (int i = 0; i < unitPriceExclVat_.size(); i++) {
      output.writeMessage(14, unitPriceExclVat_.get(i));
    }
    for (int i = 0; i < total_.size(); i++) {
      output.writeMessage(15, total_.get(i));
    }
    for (int i = 0; i < unitPrice_.size(); i++) {
      output.writeMessage(16, unitPrice_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(17, getModelMetadata());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (pageRef_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, pageRef_);
    }
    for (int i = 0; i < code_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, code_.get(i));
    }
    for (int i = 0; i < description_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, description_.get(i));
    }
    for (int i = 0; i < quantity_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, quantity_.get(i));
    }
    for (int i = 0; i < itemNumber_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, itemNumber_.get(i));
    }
    for (int i = 0; i < unit_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, unit_.get(i));
    }
    for (int i = 0; i < totalDiscount_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, totalDiscount_.get(i));
    }
    for (int i = 0; i < percentageDiscount_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, percentageDiscount_.get(i));
    }
    for (int i = 0; i < totalInclVat_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, totalInclVat_.get(i));
    }
    for (int i = 0; i < totalExclVat_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, totalExclVat_.get(i));
    }
    for (int i = 0; i < totalVat_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, totalVat_.get(i));
    }
    for (int i = 0; i < percentageVat_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, percentageVat_.get(i));
    }
    for (int i = 0; i < unitPriceInclVat_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, unitPriceInclVat_.get(i));
    }
    for (int i = 0; i < unitPriceExclVat_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, unitPriceExclVat_.get(i));
    }
    for (int i = 0; i < total_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, total_.get(i));
    }
    for (int i = 0; i < unitPrice_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, unitPrice_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(17, getModelMetadata());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof ai.visma.ssn.type.PurchaseLine)) {
      return super.equals(obj);
    }
    ai.visma.ssn.type.PurchaseLine other = (ai.visma.ssn.type.PurchaseLine) obj;

    if (getPageRef()
        != other.getPageRef()) return false;
    if (!getCodeList()
        .equals(other.getCodeList())) return false;
    if (!getDescriptionList()
        .equals(other.getDescriptionList())) return false;
    if (!getQuantityList()
        .equals(other.getQuantityList())) return false;
    if (!getItemNumberList()
        .equals(other.getItemNumberList())) return false;
    if (!getUnitList()
        .equals(other.getUnitList())) return false;
    if (!getTotalDiscountList()
        .equals(other.getTotalDiscountList())) return false;
    if (!getPercentageDiscountList()
        .equals(other.getPercentageDiscountList())) return false;
    if (!getTotalInclVatList()
        .equals(other.getTotalInclVatList())) return false;
    if (!getTotalExclVatList()
        .equals(other.getTotalExclVatList())) return false;
    if (!getTotalVatList()
        .equals(other.getTotalVatList())) return false;
    if (!getPercentageVatList()
        .equals(other.getPercentageVatList())) return false;
    if (!getUnitPriceInclVatList()
        .equals(other.getUnitPriceInclVatList())) return false;
    if (!getUnitPriceExclVatList()
        .equals(other.getUnitPriceExclVatList())) return false;
    if (!getTotalList()
        .equals(other.getTotalList())) return false;
    if (!getUnitPriceList()
        .equals(other.getUnitPriceList())) return false;
    if (hasModelMetadata() != other.hasModelMetadata()) return false;
    if (hasModelMetadata()) {
      if (!getModelMetadata()
          .equals(other.getModelMetadata())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PAGE_REF_FIELD_NUMBER;
    hash = (53 * hash) + getPageRef();
    if (getCodeCount() > 0) {
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + getCodeList().hashCode();
    }
    if (getDescriptionCount() > 0) {
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescriptionList().hashCode();
    }
    if (getQuantityCount() > 0) {
      hash = (37 * hash) + QUANTITY_FIELD_NUMBER;
      hash = (53 * hash) + getQuantityList().hashCode();
    }
    if (getItemNumberCount() > 0) {
      hash = (37 * hash) + ITEM_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getItemNumberList().hashCode();
    }
    if (getUnitCount() > 0) {
      hash = (37 * hash) + UNIT_FIELD_NUMBER;
      hash = (53 * hash) + getUnitList().hashCode();
    }
    if (getTotalDiscountCount() > 0) {
      hash = (37 * hash) + TOTAL_DISCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getTotalDiscountList().hashCode();
    }
    if (getPercentageDiscountCount() > 0) {
      hash = (37 * hash) + PERCENTAGE_DISCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getPercentageDiscountList().hashCode();
    }
    if (getTotalInclVatCount() > 0) {
      hash = (37 * hash) + TOTAL_INCL_VAT_FIELD_NUMBER;
      hash = (53 * hash) + getTotalInclVatList().hashCode();
    }
    if (getTotalExclVatCount() > 0) {
      hash = (37 * hash) + TOTAL_EXCL_VAT_FIELD_NUMBER;
      hash = (53 * hash) + getTotalExclVatList().hashCode();
    }
    if (getTotalVatCount() > 0) {
      hash = (37 * hash) + TOTAL_VAT_FIELD_NUMBER;
      hash = (53 * hash) + getTotalVatList().hashCode();
    }
    if (getPercentageVatCount() > 0) {
      hash = (37 * hash) + PERCENTAGE_VAT_FIELD_NUMBER;
      hash = (53 * hash) + getPercentageVatList().hashCode();
    }
    if (getUnitPriceInclVatCount() > 0) {
      hash = (37 * hash) + UNIT_PRICE_INCL_VAT_FIELD_NUMBER;
      hash = (53 * hash) + getUnitPriceInclVatList().hashCode();
    }
    if (getUnitPriceExclVatCount() > 0) {
      hash = (37 * hash) + UNIT_PRICE_EXCL_VAT_FIELD_NUMBER;
      hash = (53 * hash) + getUnitPriceExclVatList().hashCode();
    }
    if (getTotalCount() > 0) {
      hash = (37 * hash) + TOTAL_FIELD_NUMBER;
      hash = (53 * hash) + getTotalList().hashCode();
    }
    if (getUnitPriceCount() > 0) {
      hash = (37 * hash) + UNIT_PRICE_FIELD_NUMBER;
      hash = (53 * hash) + getUnitPriceList().hashCode();
    }
    if (hasModelMetadata()) {
      hash = (37 * hash) + MODEL_METADATA_FIELD_NUMBER;
      hash = (53 * hash) + getModelMetadata().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static ai.visma.ssn.type.PurchaseLine parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.visma.ssn.type.PurchaseLine parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.visma.ssn.type.PurchaseLine parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.visma.ssn.type.PurchaseLine parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.visma.ssn.type.PurchaseLine parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.visma.ssn.type.PurchaseLine parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.visma.ssn.type.PurchaseLine parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static ai.visma.ssn.type.PurchaseLine parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static ai.visma.ssn.type.PurchaseLine parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static ai.visma.ssn.type.PurchaseLine parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static ai.visma.ssn.type.PurchaseLine parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static ai.visma.ssn.type.PurchaseLine parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(ai.visma.ssn.type.PurchaseLine prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code ssn.type.PurchaseLine}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ssn.type.PurchaseLine)
      ai.visma.ssn.type.PurchaseLineOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.visma.ssn.type.CandidateProto.internal_static_ssn_type_PurchaseLine_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.visma.ssn.type.CandidateProto.internal_static_ssn_type_PurchaseLine_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ai.visma.ssn.type.PurchaseLine.class, ai.visma.ssn.type.PurchaseLine.Builder.class);
    }

    // Construct using ai.visma.ssn.type.PurchaseLine.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getCodeFieldBuilder();
        getDescriptionFieldBuilder();
        getQuantityFieldBuilder();
        getItemNumberFieldBuilder();
        getUnitFieldBuilder();
        getTotalDiscountFieldBuilder();
        getPercentageDiscountFieldBuilder();
        getTotalInclVatFieldBuilder();
        getTotalExclVatFieldBuilder();
        getTotalVatFieldBuilder();
        getPercentageVatFieldBuilder();
        getUnitPriceInclVatFieldBuilder();
        getUnitPriceExclVatFieldBuilder();
        getTotalFieldBuilder();
        getUnitPriceFieldBuilder();
        getModelMetadataFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      pageRef_ = 0;
      if (codeBuilder_ == null) {
        code_ = java.util.Collections.emptyList();
      } else {
        code_ = null;
        codeBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (descriptionBuilder_ == null) {
        description_ = java.util.Collections.emptyList();
      } else {
        description_ = null;
        descriptionBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (quantityBuilder_ == null) {
        quantity_ = java.util.Collections.emptyList();
      } else {
        quantity_ = null;
        quantityBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      if (itemNumberBuilder_ == null) {
        itemNumber_ = java.util.Collections.emptyList();
      } else {
        itemNumber_ = null;
        itemNumberBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000010);
      if (unitBuilder_ == null) {
        unit_ = java.util.Collections.emptyList();
      } else {
        unit_ = null;
        unitBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      if (totalDiscountBuilder_ == null) {
        totalDiscount_ = java.util.Collections.emptyList();
      } else {
        totalDiscount_ = null;
        totalDiscountBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000040);
      if (percentageDiscountBuilder_ == null) {
        percentageDiscount_ = java.util.Collections.emptyList();
      } else {
        percentageDiscount_ = null;
        percentageDiscountBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000080);
      if (totalInclVatBuilder_ == null) {
        totalInclVat_ = java.util.Collections.emptyList();
      } else {
        totalInclVat_ = null;
        totalInclVatBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000100);
      if (totalExclVatBuilder_ == null) {
        totalExclVat_ = java.util.Collections.emptyList();
      } else {
        totalExclVat_ = null;
        totalExclVatBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000200);
      if (totalVatBuilder_ == null) {
        totalVat_ = java.util.Collections.emptyList();
      } else {
        totalVat_ = null;
        totalVatBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000400);
      if (percentageVatBuilder_ == null) {
        percentageVat_ = java.util.Collections.emptyList();
      } else {
        percentageVat_ = null;
        percentageVatBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000800);
      if (unitPriceInclVatBuilder_ == null) {
        unitPriceInclVat_ = java.util.Collections.emptyList();
      } else {
        unitPriceInclVat_ = null;
        unitPriceInclVatBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00001000);
      if (unitPriceExclVatBuilder_ == null) {
        unitPriceExclVat_ = java.util.Collections.emptyList();
      } else {
        unitPriceExclVat_ = null;
        unitPriceExclVatBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00002000);
      if (totalBuilder_ == null) {
        total_ = java.util.Collections.emptyList();
      } else {
        total_ = null;
        totalBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00004000);
      if (unitPriceBuilder_ == null) {
        unitPrice_ = java.util.Collections.emptyList();
      } else {
        unitPrice_ = null;
        unitPriceBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00008000);
      modelMetadata_ = null;
      if (modelMetadataBuilder_ != null) {
        modelMetadataBuilder_.dispose();
        modelMetadataBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ai.visma.ssn.type.CandidateProto.internal_static_ssn_type_PurchaseLine_descriptor;
    }

    @java.lang.Override
    public ai.visma.ssn.type.PurchaseLine getDefaultInstanceForType() {
      return ai.visma.ssn.type.PurchaseLine.getDefaultInstance();
    }

    @java.lang.Override
    public ai.visma.ssn.type.PurchaseLine build() {
      ai.visma.ssn.type.PurchaseLine result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public ai.visma.ssn.type.PurchaseLine buildPartial() {
      ai.visma.ssn.type.PurchaseLine result = new ai.visma.ssn.type.PurchaseLine(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(ai.visma.ssn.type.PurchaseLine result) {
      if (codeBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          code_ = java.util.Collections.unmodifiableList(code_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.code_ = code_;
      } else {
        result.code_ = codeBuilder_.build();
      }
      if (descriptionBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          description_ = java.util.Collections.unmodifiableList(description_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.description_ = description_;
      } else {
        result.description_ = descriptionBuilder_.build();
      }
      if (quantityBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          quantity_ = java.util.Collections.unmodifiableList(quantity_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.quantity_ = quantity_;
      } else {
        result.quantity_ = quantityBuilder_.build();
      }
      if (itemNumberBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          itemNumber_ = java.util.Collections.unmodifiableList(itemNumber_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.itemNumber_ = itemNumber_;
      } else {
        result.itemNumber_ = itemNumberBuilder_.build();
      }
      if (unitBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          unit_ = java.util.Collections.unmodifiableList(unit_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.unit_ = unit_;
      } else {
        result.unit_ = unitBuilder_.build();
      }
      if (totalDiscountBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0)) {
          totalDiscount_ = java.util.Collections.unmodifiableList(totalDiscount_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.totalDiscount_ = totalDiscount_;
      } else {
        result.totalDiscount_ = totalDiscountBuilder_.build();
      }
      if (percentageDiscountBuilder_ == null) {
        if (((bitField0_ & 0x00000080) != 0)) {
          percentageDiscount_ = java.util.Collections.unmodifiableList(percentageDiscount_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.percentageDiscount_ = percentageDiscount_;
      } else {
        result.percentageDiscount_ = percentageDiscountBuilder_.build();
      }
      if (totalInclVatBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0)) {
          totalInclVat_ = java.util.Collections.unmodifiableList(totalInclVat_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.totalInclVat_ = totalInclVat_;
      } else {
        result.totalInclVat_ = totalInclVatBuilder_.build();
      }
      if (totalExclVatBuilder_ == null) {
        if (((bitField0_ & 0x00000200) != 0)) {
          totalExclVat_ = java.util.Collections.unmodifiableList(totalExclVat_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.totalExclVat_ = totalExclVat_;
      } else {
        result.totalExclVat_ = totalExclVatBuilder_.build();
      }
      if (totalVatBuilder_ == null) {
        if (((bitField0_ & 0x00000400) != 0)) {
          totalVat_ = java.util.Collections.unmodifiableList(totalVat_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.totalVat_ = totalVat_;
      } else {
        result.totalVat_ = totalVatBuilder_.build();
      }
      if (percentageVatBuilder_ == null) {
        if (((bitField0_ & 0x00000800) != 0)) {
          percentageVat_ = java.util.Collections.unmodifiableList(percentageVat_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.percentageVat_ = percentageVat_;
      } else {
        result.percentageVat_ = percentageVatBuilder_.build();
      }
      if (unitPriceInclVatBuilder_ == null) {
        if (((bitField0_ & 0x00001000) != 0)) {
          unitPriceInclVat_ = java.util.Collections.unmodifiableList(unitPriceInclVat_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.unitPriceInclVat_ = unitPriceInclVat_;
      } else {
        result.unitPriceInclVat_ = unitPriceInclVatBuilder_.build();
      }
      if (unitPriceExclVatBuilder_ == null) {
        if (((bitField0_ & 0x00002000) != 0)) {
          unitPriceExclVat_ = java.util.Collections.unmodifiableList(unitPriceExclVat_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.unitPriceExclVat_ = unitPriceExclVat_;
      } else {
        result.unitPriceExclVat_ = unitPriceExclVatBuilder_.build();
      }
      if (totalBuilder_ == null) {
        if (((bitField0_ & 0x00004000) != 0)) {
          total_ = java.util.Collections.unmodifiableList(total_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.total_ = total_;
      } else {
        result.total_ = totalBuilder_.build();
      }
      if (unitPriceBuilder_ == null) {
        if (((bitField0_ & 0x00008000) != 0)) {
          unitPrice_ = java.util.Collections.unmodifiableList(unitPrice_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.unitPrice_ = unitPrice_;
      } else {
        result.unitPrice_ = unitPriceBuilder_.build();
      }
    }

    private void buildPartial0(ai.visma.ssn.type.PurchaseLine result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.pageRef_ = pageRef_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00010000) != 0)) {
        result.modelMetadata_ = modelMetadataBuilder_ == null
            ? modelMetadata_
            : modelMetadataBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ai.visma.ssn.type.PurchaseLine) {
        return mergeFrom((ai.visma.ssn.type.PurchaseLine)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ai.visma.ssn.type.PurchaseLine other) {
      if (other == ai.visma.ssn.type.PurchaseLine.getDefaultInstance()) return this;
      if (other.getPageRef() != 0) {
        setPageRef(other.getPageRef());
      }
      if (codeBuilder_ == null) {
        if (!other.code_.isEmpty()) {
          if (code_.isEmpty()) {
            code_ = other.code_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCodeIsMutable();
            code_.addAll(other.code_);
          }
          onChanged();
        }
      } else {
        if (!other.code_.isEmpty()) {
          if (codeBuilder_.isEmpty()) {
            codeBuilder_.dispose();
            codeBuilder_ = null;
            code_ = other.code_;
            bitField0_ = (bitField0_ & ~0x00000002);
            codeBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getCodeFieldBuilder() : null;
          } else {
            codeBuilder_.addAllMessages(other.code_);
          }
        }
      }
      if (descriptionBuilder_ == null) {
        if (!other.description_.isEmpty()) {
          if (description_.isEmpty()) {
            description_ = other.description_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDescriptionIsMutable();
            description_.addAll(other.description_);
          }
          onChanged();
        }
      } else {
        if (!other.description_.isEmpty()) {
          if (descriptionBuilder_.isEmpty()) {
            descriptionBuilder_.dispose();
            descriptionBuilder_ = null;
            description_ = other.description_;
            bitField0_ = (bitField0_ & ~0x00000004);
            descriptionBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getDescriptionFieldBuilder() : null;
          } else {
            descriptionBuilder_.addAllMessages(other.description_);
          }
        }
      }
      if (quantityBuilder_ == null) {
        if (!other.quantity_.isEmpty()) {
          if (quantity_.isEmpty()) {
            quantity_ = other.quantity_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureQuantityIsMutable();
            quantity_.addAll(other.quantity_);
          }
          onChanged();
        }
      } else {
        if (!other.quantity_.isEmpty()) {
          if (quantityBuilder_.isEmpty()) {
            quantityBuilder_.dispose();
            quantityBuilder_ = null;
            quantity_ = other.quantity_;
            bitField0_ = (bitField0_ & ~0x00000008);
            quantityBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getQuantityFieldBuilder() : null;
          } else {
            quantityBuilder_.addAllMessages(other.quantity_);
          }
        }
      }
      if (itemNumberBuilder_ == null) {
        if (!other.itemNumber_.isEmpty()) {
          if (itemNumber_.isEmpty()) {
            itemNumber_ = other.itemNumber_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureItemNumberIsMutable();
            itemNumber_.addAll(other.itemNumber_);
          }
          onChanged();
        }
      } else {
        if (!other.itemNumber_.isEmpty()) {
          if (itemNumberBuilder_.isEmpty()) {
            itemNumberBuilder_.dispose();
            itemNumberBuilder_ = null;
            itemNumber_ = other.itemNumber_;
            bitField0_ = (bitField0_ & ~0x00000010);
            itemNumberBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getItemNumberFieldBuilder() : null;
          } else {
            itemNumberBuilder_.addAllMessages(other.itemNumber_);
          }
        }
      }
      if (unitBuilder_ == null) {
        if (!other.unit_.isEmpty()) {
          if (unit_.isEmpty()) {
            unit_ = other.unit_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureUnitIsMutable();
            unit_.addAll(other.unit_);
          }
          onChanged();
        }
      } else {
        if (!other.unit_.isEmpty()) {
          if (unitBuilder_.isEmpty()) {
            unitBuilder_.dispose();
            unitBuilder_ = null;
            unit_ = other.unit_;
            bitField0_ = (bitField0_ & ~0x00000020);
            unitBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getUnitFieldBuilder() : null;
          } else {
            unitBuilder_.addAllMessages(other.unit_);
          }
        }
      }
      if (totalDiscountBuilder_ == null) {
        if (!other.totalDiscount_.isEmpty()) {
          if (totalDiscount_.isEmpty()) {
            totalDiscount_ = other.totalDiscount_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureTotalDiscountIsMutable();
            totalDiscount_.addAll(other.totalDiscount_);
          }
          onChanged();
        }
      } else {
        if (!other.totalDiscount_.isEmpty()) {
          if (totalDiscountBuilder_.isEmpty()) {
            totalDiscountBuilder_.dispose();
            totalDiscountBuilder_ = null;
            totalDiscount_ = other.totalDiscount_;
            bitField0_ = (bitField0_ & ~0x00000040);
            totalDiscountBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getTotalDiscountFieldBuilder() : null;
          } else {
            totalDiscountBuilder_.addAllMessages(other.totalDiscount_);
          }
        }
      }
      if (percentageDiscountBuilder_ == null) {
        if (!other.percentageDiscount_.isEmpty()) {
          if (percentageDiscount_.isEmpty()) {
            percentageDiscount_ = other.percentageDiscount_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensurePercentageDiscountIsMutable();
            percentageDiscount_.addAll(other.percentageDiscount_);
          }
          onChanged();
        }
      } else {
        if (!other.percentageDiscount_.isEmpty()) {
          if (percentageDiscountBuilder_.isEmpty()) {
            percentageDiscountBuilder_.dispose();
            percentageDiscountBuilder_ = null;
            percentageDiscount_ = other.percentageDiscount_;
            bitField0_ = (bitField0_ & ~0x00000080);
            percentageDiscountBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getPercentageDiscountFieldBuilder() : null;
          } else {
            percentageDiscountBuilder_.addAllMessages(other.percentageDiscount_);
          }
        }
      }
      if (totalInclVatBuilder_ == null) {
        if (!other.totalInclVat_.isEmpty()) {
          if (totalInclVat_.isEmpty()) {
            totalInclVat_ = other.totalInclVat_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureTotalInclVatIsMutable();
            totalInclVat_.addAll(other.totalInclVat_);
          }
          onChanged();
        }
      } else {
        if (!other.totalInclVat_.isEmpty()) {
          if (totalInclVatBuilder_.isEmpty()) {
            totalInclVatBuilder_.dispose();
            totalInclVatBuilder_ = null;
            totalInclVat_ = other.totalInclVat_;
            bitField0_ = (bitField0_ & ~0x00000100);
            totalInclVatBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getTotalInclVatFieldBuilder() : null;
          } else {
            totalInclVatBuilder_.addAllMessages(other.totalInclVat_);
          }
        }
      }
      if (totalExclVatBuilder_ == null) {
        if (!other.totalExclVat_.isEmpty()) {
          if (totalExclVat_.isEmpty()) {
            totalExclVat_ = other.totalExclVat_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureTotalExclVatIsMutable();
            totalExclVat_.addAll(other.totalExclVat_);
          }
          onChanged();
        }
      } else {
        if (!other.totalExclVat_.isEmpty()) {
          if (totalExclVatBuilder_.isEmpty()) {
            totalExclVatBuilder_.dispose();
            totalExclVatBuilder_ = null;
            totalExclVat_ = other.totalExclVat_;
            bitField0_ = (bitField0_ & ~0x00000200);
            totalExclVatBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getTotalExclVatFieldBuilder() : null;
          } else {
            totalExclVatBuilder_.addAllMessages(other.totalExclVat_);
          }
        }
      }
      if (totalVatBuilder_ == null) {
        if (!other.totalVat_.isEmpty()) {
          if (totalVat_.isEmpty()) {
            totalVat_ = other.totalVat_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureTotalVatIsMutable();
            totalVat_.addAll(other.totalVat_);
          }
          onChanged();
        }
      } else {
        if (!other.totalVat_.isEmpty()) {
          if (totalVatBuilder_.isEmpty()) {
            totalVatBuilder_.dispose();
            totalVatBuilder_ = null;
            totalVat_ = other.totalVat_;
            bitField0_ = (bitField0_ & ~0x00000400);
            totalVatBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getTotalVatFieldBuilder() : null;
          } else {
            totalVatBuilder_.addAllMessages(other.totalVat_);
          }
        }
      }
      if (percentageVatBuilder_ == null) {
        if (!other.percentageVat_.isEmpty()) {
          if (percentageVat_.isEmpty()) {
            percentageVat_ = other.percentageVat_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensurePercentageVatIsMutable();
            percentageVat_.addAll(other.percentageVat_);
          }
          onChanged();
        }
      } else {
        if (!other.percentageVat_.isEmpty()) {
          if (percentageVatBuilder_.isEmpty()) {
            percentageVatBuilder_.dispose();
            percentageVatBuilder_ = null;
            percentageVat_ = other.percentageVat_;
            bitField0_ = (bitField0_ & ~0x00000800);
            percentageVatBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getPercentageVatFieldBuilder() : null;
          } else {
            percentageVatBuilder_.addAllMessages(other.percentageVat_);
          }
        }
      }
      if (unitPriceInclVatBuilder_ == null) {
        if (!other.unitPriceInclVat_.isEmpty()) {
          if (unitPriceInclVat_.isEmpty()) {
            unitPriceInclVat_ = other.unitPriceInclVat_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureUnitPriceInclVatIsMutable();
            unitPriceInclVat_.addAll(other.unitPriceInclVat_);
          }
          onChanged();
        }
      } else {
        if (!other.unitPriceInclVat_.isEmpty()) {
          if (unitPriceInclVatBuilder_.isEmpty()) {
            unitPriceInclVatBuilder_.dispose();
            unitPriceInclVatBuilder_ = null;
            unitPriceInclVat_ = other.unitPriceInclVat_;
            bitField0_ = (bitField0_ & ~0x00001000);
            unitPriceInclVatBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getUnitPriceInclVatFieldBuilder() : null;
          } else {
            unitPriceInclVatBuilder_.addAllMessages(other.unitPriceInclVat_);
          }
        }
      }
      if (unitPriceExclVatBuilder_ == null) {
        if (!other.unitPriceExclVat_.isEmpty()) {
          if (unitPriceExclVat_.isEmpty()) {
            unitPriceExclVat_ = other.unitPriceExclVat_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureUnitPriceExclVatIsMutable();
            unitPriceExclVat_.addAll(other.unitPriceExclVat_);
          }
          onChanged();
        }
      } else {
        if (!other.unitPriceExclVat_.isEmpty()) {
          if (unitPriceExclVatBuilder_.isEmpty()) {
            unitPriceExclVatBuilder_.dispose();
            unitPriceExclVatBuilder_ = null;
            unitPriceExclVat_ = other.unitPriceExclVat_;
            bitField0_ = (bitField0_ & ~0x00002000);
            unitPriceExclVatBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getUnitPriceExclVatFieldBuilder() : null;
          } else {
            unitPriceExclVatBuilder_.addAllMessages(other.unitPriceExclVat_);
          }
        }
      }
      if (totalBuilder_ == null) {
        if (!other.total_.isEmpty()) {
          if (total_.isEmpty()) {
            total_ = other.total_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureTotalIsMutable();
            total_.addAll(other.total_);
          }
          onChanged();
        }
      } else {
        if (!other.total_.isEmpty()) {
          if (totalBuilder_.isEmpty()) {
            totalBuilder_.dispose();
            totalBuilder_ = null;
            total_ = other.total_;
            bitField0_ = (bitField0_ & ~0x00004000);
            totalBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getTotalFieldBuilder() : null;
          } else {
            totalBuilder_.addAllMessages(other.total_);
          }
        }
      }
      if (unitPriceBuilder_ == null) {
        if (!other.unitPrice_.isEmpty()) {
          if (unitPrice_.isEmpty()) {
            unitPrice_ = other.unitPrice_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureUnitPriceIsMutable();
            unitPrice_.addAll(other.unitPrice_);
          }
          onChanged();
        }
      } else {
        if (!other.unitPrice_.isEmpty()) {
          if (unitPriceBuilder_.isEmpty()) {
            unitPriceBuilder_.dispose();
            unitPriceBuilder_ = null;
            unitPrice_ = other.unitPrice_;
            bitField0_ = (bitField0_ & ~0x00008000);
            unitPriceBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getUnitPriceFieldBuilder() : null;
          } else {
            unitPriceBuilder_.addAllMessages(other.unitPrice_);
          }
        }
      }
      if (other.hasModelMetadata()) {
        mergeModelMetadata(other.getModelMetadata());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              pageRef_ = input.readUInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              ai.visma.ssn.type.Candidate m =
                  input.readMessage(
                      ai.visma.ssn.type.Candidate.parser(),
                      extensionRegistry);
              if (codeBuilder_ == null) {
                ensureCodeIsMutable();
                code_.add(m);
              } else {
                codeBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              ai.visma.ssn.type.Candidate m =
                  input.readMessage(
                      ai.visma.ssn.type.Candidate.parser(),
                      extensionRegistry);
              if (descriptionBuilder_ == null) {
                ensureDescriptionIsMutable();
                description_.add(m);
              } else {
                descriptionBuilder_.addMessage(m);
              }
              break;
            } // case 26
            case 34: {
              ai.visma.ssn.type.Candidate m =
                  input.readMessage(
                      ai.visma.ssn.type.Candidate.parser(),
                      extensionRegistry);
              if (quantityBuilder_ == null) {
                ensureQuantityIsMutable();
                quantity_.add(m);
              } else {
                quantityBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              ai.visma.ssn.type.Candidate m =
                  input.readMessage(
                      ai.visma.ssn.type.Candidate.parser(),
                      extensionRegistry);
              if (itemNumberBuilder_ == null) {
                ensureItemNumberIsMutable();
                itemNumber_.add(m);
              } else {
                itemNumberBuilder_.addMessage(m);
              }
              break;
            } // case 42
            case 50: {
              ai.visma.ssn.type.Candidate m =
                  input.readMessage(
                      ai.visma.ssn.type.Candidate.parser(),
                      extensionRegistry);
              if (unitBuilder_ == null) {
                ensureUnitIsMutable();
                unit_.add(m);
              } else {
                unitBuilder_.addMessage(m);
              }
              break;
            } // case 50
            case 58: {
              ai.visma.ssn.type.Candidate m =
                  input.readMessage(
                      ai.visma.ssn.type.Candidate.parser(),
                      extensionRegistry);
              if (totalDiscountBuilder_ == null) {
                ensureTotalDiscountIsMutable();
                totalDiscount_.add(m);
              } else {
                totalDiscountBuilder_.addMessage(m);
              }
              break;
            } // case 58
            case 66: {
              ai.visma.ssn.type.Candidate m =
                  input.readMessage(
                      ai.visma.ssn.type.Candidate.parser(),
                      extensionRegistry);
              if (percentageDiscountBuilder_ == null) {
                ensurePercentageDiscountIsMutable();
                percentageDiscount_.add(m);
              } else {
                percentageDiscountBuilder_.addMessage(m);
              }
              break;
            } // case 66
            case 74: {
              ai.visma.ssn.type.Candidate m =
                  input.readMessage(
                      ai.visma.ssn.type.Candidate.parser(),
                      extensionRegistry);
              if (totalInclVatBuilder_ == null) {
                ensureTotalInclVatIsMutable();
                totalInclVat_.add(m);
              } else {
                totalInclVatBuilder_.addMessage(m);
              }
              break;
            } // case 74
            case 82: {
              ai.visma.ssn.type.Candidate m =
                  input.readMessage(
                      ai.visma.ssn.type.Candidate.parser(),
                      extensionRegistry);
              if (totalExclVatBuilder_ == null) {
                ensureTotalExclVatIsMutable();
                totalExclVat_.add(m);
              } else {
                totalExclVatBuilder_.addMessage(m);
              }
              break;
            } // case 82
            case 90: {
              ai.visma.ssn.type.Candidate m =
                  input.readMessage(
                      ai.visma.ssn.type.Candidate.parser(),
                      extensionRegistry);
              if (totalVatBuilder_ == null) {
                ensureTotalVatIsMutable();
                totalVat_.add(m);
              } else {
                totalVatBuilder_.addMessage(m);
              }
              break;
            } // case 90
            case 98: {
              ai.visma.ssn.type.Candidate m =
                  input.readMessage(
                      ai.visma.ssn.type.Candidate.parser(),
                      extensionRegistry);
              if (percentageVatBuilder_ == null) {
                ensurePercentageVatIsMutable();
                percentageVat_.add(m);
              } else {
                percentageVatBuilder_.addMessage(m);
              }
              break;
            } // case 98
            case 106: {
              ai.visma.ssn.type.Candidate m =
                  input.readMessage(
                      ai.visma.ssn.type.Candidate.parser(),
                      extensionRegistry);
              if (unitPriceInclVatBuilder_ == null) {
                ensureUnitPriceInclVatIsMutable();
                unitPriceInclVat_.add(m);
              } else {
                unitPriceInclVatBuilder_.addMessage(m);
              }
              break;
            } // case 106
            case 114: {
              ai.visma.ssn.type.Candidate m =
                  input.readMessage(
                      ai.visma.ssn.type.Candidate.parser(),
                      extensionRegistry);
              if (unitPriceExclVatBuilder_ == null) {
                ensureUnitPriceExclVatIsMutable();
                unitPriceExclVat_.add(m);
              } else {
                unitPriceExclVatBuilder_.addMessage(m);
              }
              break;
            } // case 114
            case 122: {
              ai.visma.ssn.type.Candidate m =
                  input.readMessage(
                      ai.visma.ssn.type.Candidate.parser(),
                      extensionRegistry);
              if (totalBuilder_ == null) {
                ensureTotalIsMutable();
                total_.add(m);
              } else {
                totalBuilder_.addMessage(m);
              }
              break;
            } // case 122
            case 130: {
              ai.visma.ssn.type.Candidate m =
                  input.readMessage(
                      ai.visma.ssn.type.Candidate.parser(),
                      extensionRegistry);
              if (unitPriceBuilder_ == null) {
                ensureUnitPriceIsMutable();
                unitPrice_.add(m);
              } else {
                unitPriceBuilder_.addMessage(m);
              }
              break;
            } // case 130
            case 138: {
              input.readMessage(
                  getModelMetadataFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00010000;
              break;
            } // case 138
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int pageRef_ ;
    /**
     * <pre>
     * A reference to the page where the line was found.
     * page_ref start from 1.
     * </pre>
     *
     * <code>uint32 page_ref = 1 [json_name = "pageRef"];</code>
     * @return The pageRef.
     */
    @java.lang.Override
    public int getPageRef() {
      return pageRef_;
    }
    /**
     * <pre>
     * A reference to the page where the line was found.
     * page_ref start from 1.
     * </pre>
     *
     * <code>uint32 page_ref = 1 [json_name = "pageRef"];</code>
     * @param value The pageRef to set.
     * @return This builder for chaining.
     */
    public Builder setPageRef(int value) {

      pageRef_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A reference to the page where the line was found.
     * page_ref start from 1.
     * </pre>
     *
     * <code>uint32 page_ref = 1 [json_name = "pageRef"];</code>
     * @return This builder for chaining.
     */
    public Builder clearPageRef() {
      bitField0_ = (bitField0_ & ~0x00000001);
      pageRef_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<ai.visma.ssn.type.Candidate> code_ =
      java.util.Collections.emptyList();
    private void ensureCodeIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        code_ = new java.util.ArrayList<ai.visma.ssn.type.Candidate>(code_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> codeBuilder_;

    /**
     * <pre>
     * Code is an ID that supplier uses to identify the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate> getCodeList() {
      if (codeBuilder_ == null) {
        return java.util.Collections.unmodifiableList(code_);
      } else {
        return codeBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Code is an ID that supplier uses to identify the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
     */
    public int getCodeCount() {
      if (codeBuilder_ == null) {
        return code_.size();
      } else {
        return codeBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Code is an ID that supplier uses to identify the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
     */
    public ai.visma.ssn.type.Candidate getCode(int index) {
      if (codeBuilder_ == null) {
        return code_.get(index);
      } else {
        return codeBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Code is an ID that supplier uses to identify the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
     */
    public Builder setCode(
        int index, ai.visma.ssn.type.Candidate value) {
      if (codeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCodeIsMutable();
        code_.set(index, value);
        onChanged();
      } else {
        codeBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Code is an ID that supplier uses to identify the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
     */
    public Builder setCode(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (codeBuilder_ == null) {
        ensureCodeIsMutable();
        code_.set(index, builderForValue.build());
        onChanged();
      } else {
        codeBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Code is an ID that supplier uses to identify the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
     */
    public Builder addCode(ai.visma.ssn.type.Candidate value) {
      if (codeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCodeIsMutable();
        code_.add(value);
        onChanged();
      } else {
        codeBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Code is an ID that supplier uses to identify the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
     */
    public Builder addCode(
        int index, ai.visma.ssn.type.Candidate value) {
      if (codeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCodeIsMutable();
        code_.add(index, value);
        onChanged();
      } else {
        codeBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Code is an ID that supplier uses to identify the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
     */
    public Builder addCode(
        ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (codeBuilder_ == null) {
        ensureCodeIsMutable();
        code_.add(builderForValue.build());
        onChanged();
      } else {
        codeBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Code is an ID that supplier uses to identify the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
     */
    public Builder addCode(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (codeBuilder_ == null) {
        ensureCodeIsMutable();
        code_.add(index, builderForValue.build());
        onChanged();
      } else {
        codeBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Code is an ID that supplier uses to identify the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
     */
    public Builder addAllCode(
        java.lang.Iterable<? extends ai.visma.ssn.type.Candidate> values) {
      if (codeBuilder_ == null) {
        ensureCodeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, code_);
        onChanged();
      } else {
        codeBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Code is an ID that supplier uses to identify the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
     */
    public Builder clearCode() {
      if (codeBuilder_ == null) {
        code_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        codeBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Code is an ID that supplier uses to identify the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
     */
    public Builder removeCode(int index) {
      if (codeBuilder_ == null) {
        ensureCodeIsMutable();
        code_.remove(index);
        onChanged();
      } else {
        codeBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Code is an ID that supplier uses to identify the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder getCodeBuilder(
        int index) {
      return getCodeFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Code is an ID that supplier uses to identify the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
     */
    public ai.visma.ssn.type.CandidateOrBuilder getCodeOrBuilder(
        int index) {
      if (codeBuilder_ == null) {
        return code_.get(index);  } else {
        return codeBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Code is an ID that supplier uses to identify the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
     */
    public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
         getCodeOrBuilderList() {
      if (codeBuilder_ != null) {
        return codeBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(code_);
      }
    }
    /**
     * <pre>
     * Code is an ID that supplier uses to identify the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addCodeBuilder() {
      return getCodeFieldBuilder().addBuilder(
          ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Code is an ID that supplier uses to identify the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addCodeBuilder(
        int index) {
      return getCodeFieldBuilder().addBuilder(
          index, ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Code is an ID that supplier uses to identify the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate code = 2 [json_name = "code"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate.Builder> 
         getCodeBuilderList() {
      return getCodeFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> 
        getCodeFieldBuilder() {
      if (codeBuilder_ == null) {
        codeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder>(
                code_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        code_ = null;
      }
      return codeBuilder_;
    }

    private java.util.List<ai.visma.ssn.type.Candidate> description_ =
      java.util.Collections.emptyList();
    private void ensureDescriptionIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        description_ = new java.util.ArrayList<ai.visma.ssn.type.Candidate>(description_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> descriptionBuilder_;

    /**
     * <pre>
     * Description is a piece of text that describes the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate> getDescriptionList() {
      if (descriptionBuilder_ == null) {
        return java.util.Collections.unmodifiableList(description_);
      } else {
        return descriptionBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Description is a piece of text that describes the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
     */
    public int getDescriptionCount() {
      if (descriptionBuilder_ == null) {
        return description_.size();
      } else {
        return descriptionBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Description is a piece of text that describes the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
     */
    public ai.visma.ssn.type.Candidate getDescription(int index) {
      if (descriptionBuilder_ == null) {
        return description_.get(index);
      } else {
        return descriptionBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Description is a piece of text that describes the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
     */
    public Builder setDescription(
        int index, ai.visma.ssn.type.Candidate value) {
      if (descriptionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDescriptionIsMutable();
        description_.set(index, value);
        onChanged();
      } else {
        descriptionBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Description is a piece of text that describes the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
     */
    public Builder setDescription(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (descriptionBuilder_ == null) {
        ensureDescriptionIsMutable();
        description_.set(index, builderForValue.build());
        onChanged();
      } else {
        descriptionBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Description is a piece of text that describes the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
     */
    public Builder addDescription(ai.visma.ssn.type.Candidate value) {
      if (descriptionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDescriptionIsMutable();
        description_.add(value);
        onChanged();
      } else {
        descriptionBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Description is a piece of text that describes the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
     */
    public Builder addDescription(
        int index, ai.visma.ssn.type.Candidate value) {
      if (descriptionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDescriptionIsMutable();
        description_.add(index, value);
        onChanged();
      } else {
        descriptionBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Description is a piece of text that describes the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
     */
    public Builder addDescription(
        ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (descriptionBuilder_ == null) {
        ensureDescriptionIsMutable();
        description_.add(builderForValue.build());
        onChanged();
      } else {
        descriptionBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Description is a piece of text that describes the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
     */
    public Builder addDescription(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (descriptionBuilder_ == null) {
        ensureDescriptionIsMutable();
        description_.add(index, builderForValue.build());
        onChanged();
      } else {
        descriptionBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Description is a piece of text that describes the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
     */
    public Builder addAllDescription(
        java.lang.Iterable<? extends ai.visma.ssn.type.Candidate> values) {
      if (descriptionBuilder_ == null) {
        ensureDescriptionIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, description_);
        onChanged();
      } else {
        descriptionBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Description is a piece of text that describes the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
     */
    public Builder clearDescription() {
      if (descriptionBuilder_ == null) {
        description_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        descriptionBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Description is a piece of text that describes the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
     */
    public Builder removeDescription(int index) {
      if (descriptionBuilder_ == null) {
        ensureDescriptionIsMutable();
        description_.remove(index);
        onChanged();
      } else {
        descriptionBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Description is a piece of text that describes the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder getDescriptionBuilder(
        int index) {
      return getDescriptionFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Description is a piece of text that describes the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
     */
    public ai.visma.ssn.type.CandidateOrBuilder getDescriptionOrBuilder(
        int index) {
      if (descriptionBuilder_ == null) {
        return description_.get(index);  } else {
        return descriptionBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Description is a piece of text that describes the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
     */
    public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
         getDescriptionOrBuilderList() {
      if (descriptionBuilder_ != null) {
        return descriptionBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(description_);
      }
    }
    /**
     * <pre>
     * Description is a piece of text that describes the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addDescriptionBuilder() {
      return getDescriptionFieldBuilder().addBuilder(
          ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Description is a piece of text that describes the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addDescriptionBuilder(
        int index) {
      return getDescriptionFieldBuilder().addBuilder(
          index, ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Description is a piece of text that describes the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate description = 3 [json_name = "description"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate.Builder> 
         getDescriptionBuilderList() {
      return getDescriptionFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> 
        getDescriptionFieldBuilder() {
      if (descriptionBuilder_ == null) {
        descriptionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder>(
                description_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        description_ = null;
      }
      return descriptionBuilder_;
    }

    private java.util.List<ai.visma.ssn.type.Candidate> quantity_ =
      java.util.Collections.emptyList();
    private void ensureQuantityIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        quantity_ = new java.util.ArrayList<ai.visma.ssn.type.Candidate>(quantity_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> quantityBuilder_;

    /**
     * <pre>
     * Quantity is the number of items
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate> getQuantityList() {
      if (quantityBuilder_ == null) {
        return java.util.Collections.unmodifiableList(quantity_);
      } else {
        return quantityBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Quantity is the number of items
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
     */
    public int getQuantityCount() {
      if (quantityBuilder_ == null) {
        return quantity_.size();
      } else {
        return quantityBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Quantity is the number of items
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
     */
    public ai.visma.ssn.type.Candidate getQuantity(int index) {
      if (quantityBuilder_ == null) {
        return quantity_.get(index);
      } else {
        return quantityBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Quantity is the number of items
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
     */
    public Builder setQuantity(
        int index, ai.visma.ssn.type.Candidate value) {
      if (quantityBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureQuantityIsMutable();
        quantity_.set(index, value);
        onChanged();
      } else {
        quantityBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Quantity is the number of items
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
     */
    public Builder setQuantity(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (quantityBuilder_ == null) {
        ensureQuantityIsMutable();
        quantity_.set(index, builderForValue.build());
        onChanged();
      } else {
        quantityBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Quantity is the number of items
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
     */
    public Builder addQuantity(ai.visma.ssn.type.Candidate value) {
      if (quantityBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureQuantityIsMutable();
        quantity_.add(value);
        onChanged();
      } else {
        quantityBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Quantity is the number of items
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
     */
    public Builder addQuantity(
        int index, ai.visma.ssn.type.Candidate value) {
      if (quantityBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureQuantityIsMutable();
        quantity_.add(index, value);
        onChanged();
      } else {
        quantityBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Quantity is the number of items
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
     */
    public Builder addQuantity(
        ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (quantityBuilder_ == null) {
        ensureQuantityIsMutable();
        quantity_.add(builderForValue.build());
        onChanged();
      } else {
        quantityBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Quantity is the number of items
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
     */
    public Builder addQuantity(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (quantityBuilder_ == null) {
        ensureQuantityIsMutable();
        quantity_.add(index, builderForValue.build());
        onChanged();
      } else {
        quantityBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Quantity is the number of items
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
     */
    public Builder addAllQuantity(
        java.lang.Iterable<? extends ai.visma.ssn.type.Candidate> values) {
      if (quantityBuilder_ == null) {
        ensureQuantityIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, quantity_);
        onChanged();
      } else {
        quantityBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Quantity is the number of items
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
     */
    public Builder clearQuantity() {
      if (quantityBuilder_ == null) {
        quantity_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        quantityBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Quantity is the number of items
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
     */
    public Builder removeQuantity(int index) {
      if (quantityBuilder_ == null) {
        ensureQuantityIsMutable();
        quantity_.remove(index);
        onChanged();
      } else {
        quantityBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Quantity is the number of items
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder getQuantityBuilder(
        int index) {
      return getQuantityFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Quantity is the number of items
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
     */
    public ai.visma.ssn.type.CandidateOrBuilder getQuantityOrBuilder(
        int index) {
      if (quantityBuilder_ == null) {
        return quantity_.get(index);  } else {
        return quantityBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Quantity is the number of items
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
     */
    public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
         getQuantityOrBuilderList() {
      if (quantityBuilder_ != null) {
        return quantityBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(quantity_);
      }
    }
    /**
     * <pre>
     * Quantity is the number of items
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addQuantityBuilder() {
      return getQuantityFieldBuilder().addBuilder(
          ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Quantity is the number of items
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addQuantityBuilder(
        int index) {
      return getQuantityFieldBuilder().addBuilder(
          index, ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Quantity is the number of items
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate quantity = 4 [json_name = "quantity"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate.Builder> 
         getQuantityBuilderList() {
      return getQuantityFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> 
        getQuantityFieldBuilder() {
      if (quantityBuilder_ == null) {
        quantityBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder>(
                quantity_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        quantity_ = null;
      }
      return quantityBuilder_;
    }

    private java.util.List<ai.visma.ssn.type.Candidate> itemNumber_ =
      java.util.Collections.emptyList();
    private void ensureItemNumberIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        itemNumber_ = new java.util.ArrayList<ai.visma.ssn.type.Candidate>(itemNumber_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> itemNumberBuilder_;

    /**
     * <pre>
     * ItemNumber is the number of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate> getItemNumberList() {
      if (itemNumberBuilder_ == null) {
        return java.util.Collections.unmodifiableList(itemNumber_);
      } else {
        return itemNumberBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * ItemNumber is the number of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
     */
    public int getItemNumberCount() {
      if (itemNumberBuilder_ == null) {
        return itemNumber_.size();
      } else {
        return itemNumberBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * ItemNumber is the number of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
     */
    public ai.visma.ssn.type.Candidate getItemNumber(int index) {
      if (itemNumberBuilder_ == null) {
        return itemNumber_.get(index);
      } else {
        return itemNumberBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * ItemNumber is the number of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
     */
    public Builder setItemNumber(
        int index, ai.visma.ssn.type.Candidate value) {
      if (itemNumberBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureItemNumberIsMutable();
        itemNumber_.set(index, value);
        onChanged();
      } else {
        itemNumberBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * ItemNumber is the number of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
     */
    public Builder setItemNumber(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (itemNumberBuilder_ == null) {
        ensureItemNumberIsMutable();
        itemNumber_.set(index, builderForValue.build());
        onChanged();
      } else {
        itemNumberBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * ItemNumber is the number of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
     */
    public Builder addItemNumber(ai.visma.ssn.type.Candidate value) {
      if (itemNumberBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureItemNumberIsMutable();
        itemNumber_.add(value);
        onChanged();
      } else {
        itemNumberBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * ItemNumber is the number of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
     */
    public Builder addItemNumber(
        int index, ai.visma.ssn.type.Candidate value) {
      if (itemNumberBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureItemNumberIsMutable();
        itemNumber_.add(index, value);
        onChanged();
      } else {
        itemNumberBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * ItemNumber is the number of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
     */
    public Builder addItemNumber(
        ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (itemNumberBuilder_ == null) {
        ensureItemNumberIsMutable();
        itemNumber_.add(builderForValue.build());
        onChanged();
      } else {
        itemNumberBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * ItemNumber is the number of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
     */
    public Builder addItemNumber(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (itemNumberBuilder_ == null) {
        ensureItemNumberIsMutable();
        itemNumber_.add(index, builderForValue.build());
        onChanged();
      } else {
        itemNumberBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * ItemNumber is the number of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
     */
    public Builder addAllItemNumber(
        java.lang.Iterable<? extends ai.visma.ssn.type.Candidate> values) {
      if (itemNumberBuilder_ == null) {
        ensureItemNumberIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, itemNumber_);
        onChanged();
      } else {
        itemNumberBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * ItemNumber is the number of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
     */
    public Builder clearItemNumber() {
      if (itemNumberBuilder_ == null) {
        itemNumber_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        itemNumberBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * ItemNumber is the number of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
     */
    public Builder removeItemNumber(int index) {
      if (itemNumberBuilder_ == null) {
        ensureItemNumberIsMutable();
        itemNumber_.remove(index);
        onChanged();
      } else {
        itemNumberBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * ItemNumber is the number of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder getItemNumberBuilder(
        int index) {
      return getItemNumberFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * ItemNumber is the number of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
     */
    public ai.visma.ssn.type.CandidateOrBuilder getItemNumberOrBuilder(
        int index) {
      if (itemNumberBuilder_ == null) {
        return itemNumber_.get(index);  } else {
        return itemNumberBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * ItemNumber is the number of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
     */
    public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
         getItemNumberOrBuilderList() {
      if (itemNumberBuilder_ != null) {
        return itemNumberBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(itemNumber_);
      }
    }
    /**
     * <pre>
     * ItemNumber is the number of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addItemNumberBuilder() {
      return getItemNumberFieldBuilder().addBuilder(
          ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * ItemNumber is the number of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addItemNumberBuilder(
        int index) {
      return getItemNumberFieldBuilder().addBuilder(
          index, ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * ItemNumber is the number of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate item_number = 5 [json_name = "itemNumber"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate.Builder> 
         getItemNumberBuilderList() {
      return getItemNumberFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> 
        getItemNumberFieldBuilder() {
      if (itemNumberBuilder_ == null) {
        itemNumberBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder>(
                itemNumber_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        itemNumber_ = null;
      }
      return itemNumberBuilder_;
    }

    private java.util.List<ai.visma.ssn.type.Candidate> unit_ =
      java.util.Collections.emptyList();
    private void ensureUnitIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        unit_ = new java.util.ArrayList<ai.visma.ssn.type.Candidate>(unit_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> unitBuilder_;

    /**
     * <pre>
     * Unit is the unit of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate> getUnitList() {
      if (unitBuilder_ == null) {
        return java.util.Collections.unmodifiableList(unit_);
      } else {
        return unitBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Unit is the unit of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
     */
    public int getUnitCount() {
      if (unitBuilder_ == null) {
        return unit_.size();
      } else {
        return unitBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Unit is the unit of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
     */
    public ai.visma.ssn.type.Candidate getUnit(int index) {
      if (unitBuilder_ == null) {
        return unit_.get(index);
      } else {
        return unitBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Unit is the unit of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
     */
    public Builder setUnit(
        int index, ai.visma.ssn.type.Candidate value) {
      if (unitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitIsMutable();
        unit_.set(index, value);
        onChanged();
      } else {
        unitBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Unit is the unit of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
     */
    public Builder setUnit(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (unitBuilder_ == null) {
        ensureUnitIsMutable();
        unit_.set(index, builderForValue.build());
        onChanged();
      } else {
        unitBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Unit is the unit of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
     */
    public Builder addUnit(ai.visma.ssn.type.Candidate value) {
      if (unitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitIsMutable();
        unit_.add(value);
        onChanged();
      } else {
        unitBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Unit is the unit of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
     */
    public Builder addUnit(
        int index, ai.visma.ssn.type.Candidate value) {
      if (unitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitIsMutable();
        unit_.add(index, value);
        onChanged();
      } else {
        unitBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Unit is the unit of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
     */
    public Builder addUnit(
        ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (unitBuilder_ == null) {
        ensureUnitIsMutable();
        unit_.add(builderForValue.build());
        onChanged();
      } else {
        unitBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Unit is the unit of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
     */
    public Builder addUnit(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (unitBuilder_ == null) {
        ensureUnitIsMutable();
        unit_.add(index, builderForValue.build());
        onChanged();
      } else {
        unitBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Unit is the unit of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
     */
    public Builder addAllUnit(
        java.lang.Iterable<? extends ai.visma.ssn.type.Candidate> values) {
      if (unitBuilder_ == null) {
        ensureUnitIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, unit_);
        onChanged();
      } else {
        unitBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Unit is the unit of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
     */
    public Builder clearUnit() {
      if (unitBuilder_ == null) {
        unit_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        unitBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Unit is the unit of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
     */
    public Builder removeUnit(int index) {
      if (unitBuilder_ == null) {
        ensureUnitIsMutable();
        unit_.remove(index);
        onChanged();
      } else {
        unitBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Unit is the unit of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder getUnitBuilder(
        int index) {
      return getUnitFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Unit is the unit of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
     */
    public ai.visma.ssn.type.CandidateOrBuilder getUnitOrBuilder(
        int index) {
      if (unitBuilder_ == null) {
        return unit_.get(index);  } else {
        return unitBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Unit is the unit of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
     */
    public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
         getUnitOrBuilderList() {
      if (unitBuilder_ != null) {
        return unitBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(unit_);
      }
    }
    /**
     * <pre>
     * Unit is the unit of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addUnitBuilder() {
      return getUnitFieldBuilder().addBuilder(
          ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Unit is the unit of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addUnitBuilder(
        int index) {
      return getUnitFieldBuilder().addBuilder(
          index, ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Unit is the unit of the item
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit = 6 [json_name = "unit"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate.Builder> 
         getUnitBuilderList() {
      return getUnitFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> 
        getUnitFieldBuilder() {
      if (unitBuilder_ == null) {
        unitBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder>(
                unit_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        unit_ = null;
      }
      return unitBuilder_;
    }

    private java.util.List<ai.visma.ssn.type.Candidate> totalDiscount_ =
      java.util.Collections.emptyList();
    private void ensureTotalDiscountIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        totalDiscount_ = new java.util.ArrayList<ai.visma.ssn.type.Candidate>(totalDiscount_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> totalDiscountBuilder_;

    /**
     * <pre>
     * Total discount is the total discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate> getTotalDiscountList() {
      if (totalDiscountBuilder_ == null) {
        return java.util.Collections.unmodifiableList(totalDiscount_);
      } else {
        return totalDiscountBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Total discount is the total discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
     */
    public int getTotalDiscountCount() {
      if (totalDiscountBuilder_ == null) {
        return totalDiscount_.size();
      } else {
        return totalDiscountBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Total discount is the total discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
     */
    public ai.visma.ssn.type.Candidate getTotalDiscount(int index) {
      if (totalDiscountBuilder_ == null) {
        return totalDiscount_.get(index);
      } else {
        return totalDiscountBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Total discount is the total discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
     */
    public Builder setTotalDiscount(
        int index, ai.visma.ssn.type.Candidate value) {
      if (totalDiscountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalDiscountIsMutable();
        totalDiscount_.set(index, value);
        onChanged();
      } else {
        totalDiscountBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Total discount is the total discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
     */
    public Builder setTotalDiscount(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalDiscountBuilder_ == null) {
        ensureTotalDiscountIsMutable();
        totalDiscount_.set(index, builderForValue.build());
        onChanged();
      } else {
        totalDiscountBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Total discount is the total discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
     */
    public Builder addTotalDiscount(ai.visma.ssn.type.Candidate value) {
      if (totalDiscountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalDiscountIsMutable();
        totalDiscount_.add(value);
        onChanged();
      } else {
        totalDiscountBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Total discount is the total discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
     */
    public Builder addTotalDiscount(
        int index, ai.visma.ssn.type.Candidate value) {
      if (totalDiscountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalDiscountIsMutable();
        totalDiscount_.add(index, value);
        onChanged();
      } else {
        totalDiscountBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Total discount is the total discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
     */
    public Builder addTotalDiscount(
        ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalDiscountBuilder_ == null) {
        ensureTotalDiscountIsMutable();
        totalDiscount_.add(builderForValue.build());
        onChanged();
      } else {
        totalDiscountBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Total discount is the total discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
     */
    public Builder addTotalDiscount(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalDiscountBuilder_ == null) {
        ensureTotalDiscountIsMutable();
        totalDiscount_.add(index, builderForValue.build());
        onChanged();
      } else {
        totalDiscountBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Total discount is the total discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
     */
    public Builder addAllTotalDiscount(
        java.lang.Iterable<? extends ai.visma.ssn.type.Candidate> values) {
      if (totalDiscountBuilder_ == null) {
        ensureTotalDiscountIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, totalDiscount_);
        onChanged();
      } else {
        totalDiscountBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Total discount is the total discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
     */
    public Builder clearTotalDiscount() {
      if (totalDiscountBuilder_ == null) {
        totalDiscount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        totalDiscountBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Total discount is the total discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
     */
    public Builder removeTotalDiscount(int index) {
      if (totalDiscountBuilder_ == null) {
        ensureTotalDiscountIsMutable();
        totalDiscount_.remove(index);
        onChanged();
      } else {
        totalDiscountBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Total discount is the total discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder getTotalDiscountBuilder(
        int index) {
      return getTotalDiscountFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Total discount is the total discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
     */
    public ai.visma.ssn.type.CandidateOrBuilder getTotalDiscountOrBuilder(
        int index) {
      if (totalDiscountBuilder_ == null) {
        return totalDiscount_.get(index);  } else {
        return totalDiscountBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Total discount is the total discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
     */
    public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
         getTotalDiscountOrBuilderList() {
      if (totalDiscountBuilder_ != null) {
        return totalDiscountBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(totalDiscount_);
      }
    }
    /**
     * <pre>
     * Total discount is the total discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addTotalDiscountBuilder() {
      return getTotalDiscountFieldBuilder().addBuilder(
          ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Total discount is the total discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addTotalDiscountBuilder(
        int index) {
      return getTotalDiscountFieldBuilder().addBuilder(
          index, ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Total discount is the total discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_discount = 7 [json_name = "totalDiscount"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate.Builder> 
         getTotalDiscountBuilderList() {
      return getTotalDiscountFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> 
        getTotalDiscountFieldBuilder() {
      if (totalDiscountBuilder_ == null) {
        totalDiscountBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder>(
                totalDiscount_,
                ((bitField0_ & 0x00000040) != 0),
                getParentForChildren(),
                isClean());
        totalDiscount_ = null;
      }
      return totalDiscountBuilder_;
    }

    private java.util.List<ai.visma.ssn.type.Candidate> percentageDiscount_ =
      java.util.Collections.emptyList();
    private void ensurePercentageDiscountIsMutable() {
      if (!((bitField0_ & 0x00000080) != 0)) {
        percentageDiscount_ = new java.util.ArrayList<ai.visma.ssn.type.Candidate>(percentageDiscount_);
        bitField0_ |= 0x00000080;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> percentageDiscountBuilder_;

    /**
     * <pre>
     * Percentage discount is the percentage discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate> getPercentageDiscountList() {
      if (percentageDiscountBuilder_ == null) {
        return java.util.Collections.unmodifiableList(percentageDiscount_);
      } else {
        return percentageDiscountBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Percentage discount is the percentage discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
     */
    public int getPercentageDiscountCount() {
      if (percentageDiscountBuilder_ == null) {
        return percentageDiscount_.size();
      } else {
        return percentageDiscountBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Percentage discount is the percentage discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
     */
    public ai.visma.ssn.type.Candidate getPercentageDiscount(int index) {
      if (percentageDiscountBuilder_ == null) {
        return percentageDiscount_.get(index);
      } else {
        return percentageDiscountBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Percentage discount is the percentage discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
     */
    public Builder setPercentageDiscount(
        int index, ai.visma.ssn.type.Candidate value) {
      if (percentageDiscountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePercentageDiscountIsMutable();
        percentageDiscount_.set(index, value);
        onChanged();
      } else {
        percentageDiscountBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Percentage discount is the percentage discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
     */
    public Builder setPercentageDiscount(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (percentageDiscountBuilder_ == null) {
        ensurePercentageDiscountIsMutable();
        percentageDiscount_.set(index, builderForValue.build());
        onChanged();
      } else {
        percentageDiscountBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Percentage discount is the percentage discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
     */
    public Builder addPercentageDiscount(ai.visma.ssn.type.Candidate value) {
      if (percentageDiscountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePercentageDiscountIsMutable();
        percentageDiscount_.add(value);
        onChanged();
      } else {
        percentageDiscountBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Percentage discount is the percentage discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
     */
    public Builder addPercentageDiscount(
        int index, ai.visma.ssn.type.Candidate value) {
      if (percentageDiscountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePercentageDiscountIsMutable();
        percentageDiscount_.add(index, value);
        onChanged();
      } else {
        percentageDiscountBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Percentage discount is the percentage discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
     */
    public Builder addPercentageDiscount(
        ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (percentageDiscountBuilder_ == null) {
        ensurePercentageDiscountIsMutable();
        percentageDiscount_.add(builderForValue.build());
        onChanged();
      } else {
        percentageDiscountBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Percentage discount is the percentage discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
     */
    public Builder addPercentageDiscount(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (percentageDiscountBuilder_ == null) {
        ensurePercentageDiscountIsMutable();
        percentageDiscount_.add(index, builderForValue.build());
        onChanged();
      } else {
        percentageDiscountBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Percentage discount is the percentage discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
     */
    public Builder addAllPercentageDiscount(
        java.lang.Iterable<? extends ai.visma.ssn.type.Candidate> values) {
      if (percentageDiscountBuilder_ == null) {
        ensurePercentageDiscountIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, percentageDiscount_);
        onChanged();
      } else {
        percentageDiscountBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Percentage discount is the percentage discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
     */
    public Builder clearPercentageDiscount() {
      if (percentageDiscountBuilder_ == null) {
        percentageDiscount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
      } else {
        percentageDiscountBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Percentage discount is the percentage discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
     */
    public Builder removePercentageDiscount(int index) {
      if (percentageDiscountBuilder_ == null) {
        ensurePercentageDiscountIsMutable();
        percentageDiscount_.remove(index);
        onChanged();
      } else {
        percentageDiscountBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Percentage discount is the percentage discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder getPercentageDiscountBuilder(
        int index) {
      return getPercentageDiscountFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Percentage discount is the percentage discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
     */
    public ai.visma.ssn.type.CandidateOrBuilder getPercentageDiscountOrBuilder(
        int index) {
      if (percentageDiscountBuilder_ == null) {
        return percentageDiscount_.get(index);  } else {
        return percentageDiscountBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Percentage discount is the percentage discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
     */
    public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
         getPercentageDiscountOrBuilderList() {
      if (percentageDiscountBuilder_ != null) {
        return percentageDiscountBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(percentageDiscount_);
      }
    }
    /**
     * <pre>
     * Percentage discount is the percentage discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addPercentageDiscountBuilder() {
      return getPercentageDiscountFieldBuilder().addBuilder(
          ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Percentage discount is the percentage discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addPercentageDiscountBuilder(
        int index) {
      return getPercentageDiscountFieldBuilder().addBuilder(
          index, ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Percentage discount is the percentage discount of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_discount = 8 [json_name = "percentageDiscount"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate.Builder> 
         getPercentageDiscountBuilderList() {
      return getPercentageDiscountFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> 
        getPercentageDiscountFieldBuilder() {
      if (percentageDiscountBuilder_ == null) {
        percentageDiscountBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder>(
                percentageDiscount_,
                ((bitField0_ & 0x00000080) != 0),
                getParentForChildren(),
                isClean());
        percentageDiscount_ = null;
      }
      return percentageDiscountBuilder_;
    }

    private java.util.List<ai.visma.ssn.type.Candidate> totalInclVat_ =
      java.util.Collections.emptyList();
    private void ensureTotalInclVatIsMutable() {
      if (!((bitField0_ & 0x00000100) != 0)) {
        totalInclVat_ = new java.util.ArrayList<ai.visma.ssn.type.Candidate>(totalInclVat_);
        bitField0_ |= 0x00000100;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> totalInclVatBuilder_;

    /**
     * <pre>
     * Total incl vat is the total price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate> getTotalInclVatList() {
      if (totalInclVatBuilder_ == null) {
        return java.util.Collections.unmodifiableList(totalInclVat_);
      } else {
        return totalInclVatBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Total incl vat is the total price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
     */
    public int getTotalInclVatCount() {
      if (totalInclVatBuilder_ == null) {
        return totalInclVat_.size();
      } else {
        return totalInclVatBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Total incl vat is the total price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate getTotalInclVat(int index) {
      if (totalInclVatBuilder_ == null) {
        return totalInclVat_.get(index);
      } else {
        return totalInclVatBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Total incl vat is the total price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
     */
    public Builder setTotalInclVat(
        int index, ai.visma.ssn.type.Candidate value) {
      if (totalInclVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalInclVatIsMutable();
        totalInclVat_.set(index, value);
        onChanged();
      } else {
        totalInclVatBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Total incl vat is the total price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
     */
    public Builder setTotalInclVat(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalInclVatBuilder_ == null) {
        ensureTotalInclVatIsMutable();
        totalInclVat_.set(index, builderForValue.build());
        onChanged();
      } else {
        totalInclVatBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Total incl vat is the total price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
     */
    public Builder addTotalInclVat(ai.visma.ssn.type.Candidate value) {
      if (totalInclVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalInclVatIsMutable();
        totalInclVat_.add(value);
        onChanged();
      } else {
        totalInclVatBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Total incl vat is the total price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
     */
    public Builder addTotalInclVat(
        int index, ai.visma.ssn.type.Candidate value) {
      if (totalInclVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalInclVatIsMutable();
        totalInclVat_.add(index, value);
        onChanged();
      } else {
        totalInclVatBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Total incl vat is the total price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
     */
    public Builder addTotalInclVat(
        ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalInclVatBuilder_ == null) {
        ensureTotalInclVatIsMutable();
        totalInclVat_.add(builderForValue.build());
        onChanged();
      } else {
        totalInclVatBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Total incl vat is the total price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
     */
    public Builder addTotalInclVat(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalInclVatBuilder_ == null) {
        ensureTotalInclVatIsMutable();
        totalInclVat_.add(index, builderForValue.build());
        onChanged();
      } else {
        totalInclVatBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Total incl vat is the total price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
     */
    public Builder addAllTotalInclVat(
        java.lang.Iterable<? extends ai.visma.ssn.type.Candidate> values) {
      if (totalInclVatBuilder_ == null) {
        ensureTotalInclVatIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, totalInclVat_);
        onChanged();
      } else {
        totalInclVatBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Total incl vat is the total price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
     */
    public Builder clearTotalInclVat() {
      if (totalInclVatBuilder_ == null) {
        totalInclVat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
      } else {
        totalInclVatBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Total incl vat is the total price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
     */
    public Builder removeTotalInclVat(int index) {
      if (totalInclVatBuilder_ == null) {
        ensureTotalInclVatIsMutable();
        totalInclVat_.remove(index);
        onChanged();
      } else {
        totalInclVatBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Total incl vat is the total price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder getTotalInclVatBuilder(
        int index) {
      return getTotalInclVatFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Total incl vat is the total price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
     */
    public ai.visma.ssn.type.CandidateOrBuilder getTotalInclVatOrBuilder(
        int index) {
      if (totalInclVatBuilder_ == null) {
        return totalInclVat_.get(index);  } else {
        return totalInclVatBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Total incl vat is the total price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
     */
    public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
         getTotalInclVatOrBuilderList() {
      if (totalInclVatBuilder_ != null) {
        return totalInclVatBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(totalInclVat_);
      }
    }
    /**
     * <pre>
     * Total incl vat is the total price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addTotalInclVatBuilder() {
      return getTotalInclVatFieldBuilder().addBuilder(
          ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Total incl vat is the total price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addTotalInclVatBuilder(
        int index) {
      return getTotalInclVatFieldBuilder().addBuilder(
          index, ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Total incl vat is the total price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_incl_vat = 9 [json_name = "totalInclVat"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate.Builder> 
         getTotalInclVatBuilderList() {
      return getTotalInclVatFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> 
        getTotalInclVatFieldBuilder() {
      if (totalInclVatBuilder_ == null) {
        totalInclVatBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder>(
                totalInclVat_,
                ((bitField0_ & 0x00000100) != 0),
                getParentForChildren(),
                isClean());
        totalInclVat_ = null;
      }
      return totalInclVatBuilder_;
    }

    private java.util.List<ai.visma.ssn.type.Candidate> totalExclVat_ =
      java.util.Collections.emptyList();
    private void ensureTotalExclVatIsMutable() {
      if (!((bitField0_ & 0x00000200) != 0)) {
        totalExclVat_ = new java.util.ArrayList<ai.visma.ssn.type.Candidate>(totalExclVat_);
        bitField0_ |= 0x00000200;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> totalExclVatBuilder_;

    /**
     * <pre>
     * Total excl vat is the total price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate> getTotalExclVatList() {
      if (totalExclVatBuilder_ == null) {
        return java.util.Collections.unmodifiableList(totalExclVat_);
      } else {
        return totalExclVatBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Total excl vat is the total price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
     */
    public int getTotalExclVatCount() {
      if (totalExclVatBuilder_ == null) {
        return totalExclVat_.size();
      } else {
        return totalExclVatBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Total excl vat is the total price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate getTotalExclVat(int index) {
      if (totalExclVatBuilder_ == null) {
        return totalExclVat_.get(index);
      } else {
        return totalExclVatBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Total excl vat is the total price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
     */
    public Builder setTotalExclVat(
        int index, ai.visma.ssn.type.Candidate value) {
      if (totalExclVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalExclVatIsMutable();
        totalExclVat_.set(index, value);
        onChanged();
      } else {
        totalExclVatBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Total excl vat is the total price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
     */
    public Builder setTotalExclVat(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalExclVatBuilder_ == null) {
        ensureTotalExclVatIsMutable();
        totalExclVat_.set(index, builderForValue.build());
        onChanged();
      } else {
        totalExclVatBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Total excl vat is the total price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
     */
    public Builder addTotalExclVat(ai.visma.ssn.type.Candidate value) {
      if (totalExclVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalExclVatIsMutable();
        totalExclVat_.add(value);
        onChanged();
      } else {
        totalExclVatBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Total excl vat is the total price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
     */
    public Builder addTotalExclVat(
        int index, ai.visma.ssn.type.Candidate value) {
      if (totalExclVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalExclVatIsMutable();
        totalExclVat_.add(index, value);
        onChanged();
      } else {
        totalExclVatBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Total excl vat is the total price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
     */
    public Builder addTotalExclVat(
        ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalExclVatBuilder_ == null) {
        ensureTotalExclVatIsMutable();
        totalExclVat_.add(builderForValue.build());
        onChanged();
      } else {
        totalExclVatBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Total excl vat is the total price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
     */
    public Builder addTotalExclVat(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalExclVatBuilder_ == null) {
        ensureTotalExclVatIsMutable();
        totalExclVat_.add(index, builderForValue.build());
        onChanged();
      } else {
        totalExclVatBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Total excl vat is the total price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
     */
    public Builder addAllTotalExclVat(
        java.lang.Iterable<? extends ai.visma.ssn.type.Candidate> values) {
      if (totalExclVatBuilder_ == null) {
        ensureTotalExclVatIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, totalExclVat_);
        onChanged();
      } else {
        totalExclVatBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Total excl vat is the total price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
     */
    public Builder clearTotalExclVat() {
      if (totalExclVatBuilder_ == null) {
        totalExclVat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
      } else {
        totalExclVatBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Total excl vat is the total price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
     */
    public Builder removeTotalExclVat(int index) {
      if (totalExclVatBuilder_ == null) {
        ensureTotalExclVatIsMutable();
        totalExclVat_.remove(index);
        onChanged();
      } else {
        totalExclVatBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Total excl vat is the total price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder getTotalExclVatBuilder(
        int index) {
      return getTotalExclVatFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Total excl vat is the total price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
     */
    public ai.visma.ssn.type.CandidateOrBuilder getTotalExclVatOrBuilder(
        int index) {
      if (totalExclVatBuilder_ == null) {
        return totalExclVat_.get(index);  } else {
        return totalExclVatBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Total excl vat is the total price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
     */
    public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
         getTotalExclVatOrBuilderList() {
      if (totalExclVatBuilder_ != null) {
        return totalExclVatBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(totalExclVat_);
      }
    }
    /**
     * <pre>
     * Total excl vat is the total price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addTotalExclVatBuilder() {
      return getTotalExclVatFieldBuilder().addBuilder(
          ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Total excl vat is the total price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addTotalExclVatBuilder(
        int index) {
      return getTotalExclVatFieldBuilder().addBuilder(
          index, ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Total excl vat is the total price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_excl_vat = 10 [json_name = "totalExclVat"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate.Builder> 
         getTotalExclVatBuilderList() {
      return getTotalExclVatFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> 
        getTotalExclVatFieldBuilder() {
      if (totalExclVatBuilder_ == null) {
        totalExclVatBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder>(
                totalExclVat_,
                ((bitField0_ & 0x00000200) != 0),
                getParentForChildren(),
                isClean());
        totalExclVat_ = null;
      }
      return totalExclVatBuilder_;
    }

    private java.util.List<ai.visma.ssn.type.Candidate> totalVat_ =
      java.util.Collections.emptyList();
    private void ensureTotalVatIsMutable() {
      if (!((bitField0_ & 0x00000400) != 0)) {
        totalVat_ = new java.util.ArrayList<ai.visma.ssn.type.Candidate>(totalVat_);
        bitField0_ |= 0x00000400;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> totalVatBuilder_;

    /**
     * <pre>
     * Total vat is the total vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate> getTotalVatList() {
      if (totalVatBuilder_ == null) {
        return java.util.Collections.unmodifiableList(totalVat_);
      } else {
        return totalVatBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Total vat is the total vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
     */
    public int getTotalVatCount() {
      if (totalVatBuilder_ == null) {
        return totalVat_.size();
      } else {
        return totalVatBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Total vat is the total vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
     */
    public ai.visma.ssn.type.Candidate getTotalVat(int index) {
      if (totalVatBuilder_ == null) {
        return totalVat_.get(index);
      } else {
        return totalVatBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Total vat is the total vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
     */
    public Builder setTotalVat(
        int index, ai.visma.ssn.type.Candidate value) {
      if (totalVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalVatIsMutable();
        totalVat_.set(index, value);
        onChanged();
      } else {
        totalVatBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Total vat is the total vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
     */
    public Builder setTotalVat(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalVatBuilder_ == null) {
        ensureTotalVatIsMutable();
        totalVat_.set(index, builderForValue.build());
        onChanged();
      } else {
        totalVatBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Total vat is the total vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
     */
    public Builder addTotalVat(ai.visma.ssn.type.Candidate value) {
      if (totalVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalVatIsMutable();
        totalVat_.add(value);
        onChanged();
      } else {
        totalVatBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Total vat is the total vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
     */
    public Builder addTotalVat(
        int index, ai.visma.ssn.type.Candidate value) {
      if (totalVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalVatIsMutable();
        totalVat_.add(index, value);
        onChanged();
      } else {
        totalVatBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Total vat is the total vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
     */
    public Builder addTotalVat(
        ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalVatBuilder_ == null) {
        ensureTotalVatIsMutable();
        totalVat_.add(builderForValue.build());
        onChanged();
      } else {
        totalVatBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Total vat is the total vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
     */
    public Builder addTotalVat(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalVatBuilder_ == null) {
        ensureTotalVatIsMutable();
        totalVat_.add(index, builderForValue.build());
        onChanged();
      } else {
        totalVatBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Total vat is the total vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
     */
    public Builder addAllTotalVat(
        java.lang.Iterable<? extends ai.visma.ssn.type.Candidate> values) {
      if (totalVatBuilder_ == null) {
        ensureTotalVatIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, totalVat_);
        onChanged();
      } else {
        totalVatBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Total vat is the total vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
     */
    public Builder clearTotalVat() {
      if (totalVatBuilder_ == null) {
        totalVat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
      } else {
        totalVatBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Total vat is the total vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
     */
    public Builder removeTotalVat(int index) {
      if (totalVatBuilder_ == null) {
        ensureTotalVatIsMutable();
        totalVat_.remove(index);
        onChanged();
      } else {
        totalVatBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Total vat is the total vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder getTotalVatBuilder(
        int index) {
      return getTotalVatFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Total vat is the total vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
     */
    public ai.visma.ssn.type.CandidateOrBuilder getTotalVatOrBuilder(
        int index) {
      if (totalVatBuilder_ == null) {
        return totalVat_.get(index);  } else {
        return totalVatBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Total vat is the total vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
     */
    public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
         getTotalVatOrBuilderList() {
      if (totalVatBuilder_ != null) {
        return totalVatBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(totalVat_);
      }
    }
    /**
     * <pre>
     * Total vat is the total vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addTotalVatBuilder() {
      return getTotalVatFieldBuilder().addBuilder(
          ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Total vat is the total vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addTotalVatBuilder(
        int index) {
      return getTotalVatFieldBuilder().addBuilder(
          index, ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Total vat is the total vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total_vat = 11 [json_name = "totalVat"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate.Builder> 
         getTotalVatBuilderList() {
      return getTotalVatFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> 
        getTotalVatFieldBuilder() {
      if (totalVatBuilder_ == null) {
        totalVatBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder>(
                totalVat_,
                ((bitField0_ & 0x00000400) != 0),
                getParentForChildren(),
                isClean());
        totalVat_ = null;
      }
      return totalVatBuilder_;
    }

    private java.util.List<ai.visma.ssn.type.Candidate> percentageVat_ =
      java.util.Collections.emptyList();
    private void ensurePercentageVatIsMutable() {
      if (!((bitField0_ & 0x00000800) != 0)) {
        percentageVat_ = new java.util.ArrayList<ai.visma.ssn.type.Candidate>(percentageVat_);
        bitField0_ |= 0x00000800;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> percentageVatBuilder_;

    /**
     * <pre>
     * Percentage vat is the percentage vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate> getPercentageVatList() {
      if (percentageVatBuilder_ == null) {
        return java.util.Collections.unmodifiableList(percentageVat_);
      } else {
        return percentageVatBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Percentage vat is the percentage vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
     */
    public int getPercentageVatCount() {
      if (percentageVatBuilder_ == null) {
        return percentageVat_.size();
      } else {
        return percentageVatBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Percentage vat is the percentage vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
     */
    public ai.visma.ssn.type.Candidate getPercentageVat(int index) {
      if (percentageVatBuilder_ == null) {
        return percentageVat_.get(index);
      } else {
        return percentageVatBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Percentage vat is the percentage vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
     */
    public Builder setPercentageVat(
        int index, ai.visma.ssn.type.Candidate value) {
      if (percentageVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePercentageVatIsMutable();
        percentageVat_.set(index, value);
        onChanged();
      } else {
        percentageVatBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Percentage vat is the percentage vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
     */
    public Builder setPercentageVat(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (percentageVatBuilder_ == null) {
        ensurePercentageVatIsMutable();
        percentageVat_.set(index, builderForValue.build());
        onChanged();
      } else {
        percentageVatBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Percentage vat is the percentage vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
     */
    public Builder addPercentageVat(ai.visma.ssn.type.Candidate value) {
      if (percentageVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePercentageVatIsMutable();
        percentageVat_.add(value);
        onChanged();
      } else {
        percentageVatBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Percentage vat is the percentage vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
     */
    public Builder addPercentageVat(
        int index, ai.visma.ssn.type.Candidate value) {
      if (percentageVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePercentageVatIsMutable();
        percentageVat_.add(index, value);
        onChanged();
      } else {
        percentageVatBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Percentage vat is the percentage vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
     */
    public Builder addPercentageVat(
        ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (percentageVatBuilder_ == null) {
        ensurePercentageVatIsMutable();
        percentageVat_.add(builderForValue.build());
        onChanged();
      } else {
        percentageVatBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Percentage vat is the percentage vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
     */
    public Builder addPercentageVat(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (percentageVatBuilder_ == null) {
        ensurePercentageVatIsMutable();
        percentageVat_.add(index, builderForValue.build());
        onChanged();
      } else {
        percentageVatBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Percentage vat is the percentage vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
     */
    public Builder addAllPercentageVat(
        java.lang.Iterable<? extends ai.visma.ssn.type.Candidate> values) {
      if (percentageVatBuilder_ == null) {
        ensurePercentageVatIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, percentageVat_);
        onChanged();
      } else {
        percentageVatBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Percentage vat is the percentage vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
     */
    public Builder clearPercentageVat() {
      if (percentageVatBuilder_ == null) {
        percentageVat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
      } else {
        percentageVatBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Percentage vat is the percentage vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
     */
    public Builder removePercentageVat(int index) {
      if (percentageVatBuilder_ == null) {
        ensurePercentageVatIsMutable();
        percentageVat_.remove(index);
        onChanged();
      } else {
        percentageVatBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Percentage vat is the percentage vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder getPercentageVatBuilder(
        int index) {
      return getPercentageVatFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Percentage vat is the percentage vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
     */
    public ai.visma.ssn.type.CandidateOrBuilder getPercentageVatOrBuilder(
        int index) {
      if (percentageVatBuilder_ == null) {
        return percentageVat_.get(index);  } else {
        return percentageVatBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Percentage vat is the percentage vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
     */
    public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
         getPercentageVatOrBuilderList() {
      if (percentageVatBuilder_ != null) {
        return percentageVatBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(percentageVat_);
      }
    }
    /**
     * <pre>
     * Percentage vat is the percentage vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addPercentageVatBuilder() {
      return getPercentageVatFieldBuilder().addBuilder(
          ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Percentage vat is the percentage vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addPercentageVatBuilder(
        int index) {
      return getPercentageVatFieldBuilder().addBuilder(
          index, ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Percentage vat is the percentage vat of the line
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate percentage_vat = 12 [json_name = "percentageVat"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate.Builder> 
         getPercentageVatBuilderList() {
      return getPercentageVatFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> 
        getPercentageVatFieldBuilder() {
      if (percentageVatBuilder_ == null) {
        percentageVatBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder>(
                percentageVat_,
                ((bitField0_ & 0x00000800) != 0),
                getParentForChildren(),
                isClean());
        percentageVat_ = null;
      }
      return percentageVatBuilder_;
    }

    private java.util.List<ai.visma.ssn.type.Candidate> unitPriceInclVat_ =
      java.util.Collections.emptyList();
    private void ensureUnitPriceInclVatIsMutable() {
      if (!((bitField0_ & 0x00001000) != 0)) {
        unitPriceInclVat_ = new java.util.ArrayList<ai.visma.ssn.type.Candidate>(unitPriceInclVat_);
        bitField0_ |= 0x00001000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> unitPriceInclVatBuilder_;

    /**
     * <pre>
     * Unit price incl vat is the unit price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate> getUnitPriceInclVatList() {
      if (unitPriceInclVatBuilder_ == null) {
        return java.util.Collections.unmodifiableList(unitPriceInclVat_);
      } else {
        return unitPriceInclVatBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Unit price incl vat is the unit price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
     */
    public int getUnitPriceInclVatCount() {
      if (unitPriceInclVatBuilder_ == null) {
        return unitPriceInclVat_.size();
      } else {
        return unitPriceInclVatBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Unit price incl vat is the unit price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate getUnitPriceInclVat(int index) {
      if (unitPriceInclVatBuilder_ == null) {
        return unitPriceInclVat_.get(index);
      } else {
        return unitPriceInclVatBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Unit price incl vat is the unit price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
     */
    public Builder setUnitPriceInclVat(
        int index, ai.visma.ssn.type.Candidate value) {
      if (unitPriceInclVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitPriceInclVatIsMutable();
        unitPriceInclVat_.set(index, value);
        onChanged();
      } else {
        unitPriceInclVatBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Unit price incl vat is the unit price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
     */
    public Builder setUnitPriceInclVat(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (unitPriceInclVatBuilder_ == null) {
        ensureUnitPriceInclVatIsMutable();
        unitPriceInclVat_.set(index, builderForValue.build());
        onChanged();
      } else {
        unitPriceInclVatBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Unit price incl vat is the unit price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
     */
    public Builder addUnitPriceInclVat(ai.visma.ssn.type.Candidate value) {
      if (unitPriceInclVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitPriceInclVatIsMutable();
        unitPriceInclVat_.add(value);
        onChanged();
      } else {
        unitPriceInclVatBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Unit price incl vat is the unit price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
     */
    public Builder addUnitPriceInclVat(
        int index, ai.visma.ssn.type.Candidate value) {
      if (unitPriceInclVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitPriceInclVatIsMutable();
        unitPriceInclVat_.add(index, value);
        onChanged();
      } else {
        unitPriceInclVatBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Unit price incl vat is the unit price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
     */
    public Builder addUnitPriceInclVat(
        ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (unitPriceInclVatBuilder_ == null) {
        ensureUnitPriceInclVatIsMutable();
        unitPriceInclVat_.add(builderForValue.build());
        onChanged();
      } else {
        unitPriceInclVatBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Unit price incl vat is the unit price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
     */
    public Builder addUnitPriceInclVat(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (unitPriceInclVatBuilder_ == null) {
        ensureUnitPriceInclVatIsMutable();
        unitPriceInclVat_.add(index, builderForValue.build());
        onChanged();
      } else {
        unitPriceInclVatBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Unit price incl vat is the unit price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
     */
    public Builder addAllUnitPriceInclVat(
        java.lang.Iterable<? extends ai.visma.ssn.type.Candidate> values) {
      if (unitPriceInclVatBuilder_ == null) {
        ensureUnitPriceInclVatIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, unitPriceInclVat_);
        onChanged();
      } else {
        unitPriceInclVatBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Unit price incl vat is the unit price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
     */
    public Builder clearUnitPriceInclVat() {
      if (unitPriceInclVatBuilder_ == null) {
        unitPriceInclVat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
      } else {
        unitPriceInclVatBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Unit price incl vat is the unit price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
     */
    public Builder removeUnitPriceInclVat(int index) {
      if (unitPriceInclVatBuilder_ == null) {
        ensureUnitPriceInclVatIsMutable();
        unitPriceInclVat_.remove(index);
        onChanged();
      } else {
        unitPriceInclVatBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Unit price incl vat is the unit price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder getUnitPriceInclVatBuilder(
        int index) {
      return getUnitPriceInclVatFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Unit price incl vat is the unit price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
     */
    public ai.visma.ssn.type.CandidateOrBuilder getUnitPriceInclVatOrBuilder(
        int index) {
      if (unitPriceInclVatBuilder_ == null) {
        return unitPriceInclVat_.get(index);  } else {
        return unitPriceInclVatBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Unit price incl vat is the unit price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
     */
    public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
         getUnitPriceInclVatOrBuilderList() {
      if (unitPriceInclVatBuilder_ != null) {
        return unitPriceInclVatBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(unitPriceInclVat_);
      }
    }
    /**
     * <pre>
     * Unit price incl vat is the unit price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addUnitPriceInclVatBuilder() {
      return getUnitPriceInclVatFieldBuilder().addBuilder(
          ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Unit price incl vat is the unit price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addUnitPriceInclVatBuilder(
        int index) {
      return getUnitPriceInclVatFieldBuilder().addBuilder(
          index, ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Unit price incl vat is the unit price of the line including vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_incl_vat = 13 [json_name = "unitPriceInclVat"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate.Builder> 
         getUnitPriceInclVatBuilderList() {
      return getUnitPriceInclVatFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> 
        getUnitPriceInclVatFieldBuilder() {
      if (unitPriceInclVatBuilder_ == null) {
        unitPriceInclVatBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder>(
                unitPriceInclVat_,
                ((bitField0_ & 0x00001000) != 0),
                getParentForChildren(),
                isClean());
        unitPriceInclVat_ = null;
      }
      return unitPriceInclVatBuilder_;
    }

    private java.util.List<ai.visma.ssn.type.Candidate> unitPriceExclVat_ =
      java.util.Collections.emptyList();
    private void ensureUnitPriceExclVatIsMutable() {
      if (!((bitField0_ & 0x00002000) != 0)) {
        unitPriceExclVat_ = new java.util.ArrayList<ai.visma.ssn.type.Candidate>(unitPriceExclVat_);
        bitField0_ |= 0x00002000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> unitPriceExclVatBuilder_;

    /**
     * <pre>
     * Unit price excl vat is the unit price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate> getUnitPriceExclVatList() {
      if (unitPriceExclVatBuilder_ == null) {
        return java.util.Collections.unmodifiableList(unitPriceExclVat_);
      } else {
        return unitPriceExclVatBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Unit price excl vat is the unit price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
     */
    public int getUnitPriceExclVatCount() {
      if (unitPriceExclVatBuilder_ == null) {
        return unitPriceExclVat_.size();
      } else {
        return unitPriceExclVatBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Unit price excl vat is the unit price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate getUnitPriceExclVat(int index) {
      if (unitPriceExclVatBuilder_ == null) {
        return unitPriceExclVat_.get(index);
      } else {
        return unitPriceExclVatBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Unit price excl vat is the unit price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
     */
    public Builder setUnitPriceExclVat(
        int index, ai.visma.ssn.type.Candidate value) {
      if (unitPriceExclVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitPriceExclVatIsMutable();
        unitPriceExclVat_.set(index, value);
        onChanged();
      } else {
        unitPriceExclVatBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Unit price excl vat is the unit price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
     */
    public Builder setUnitPriceExclVat(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (unitPriceExclVatBuilder_ == null) {
        ensureUnitPriceExclVatIsMutable();
        unitPriceExclVat_.set(index, builderForValue.build());
        onChanged();
      } else {
        unitPriceExclVatBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Unit price excl vat is the unit price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
     */
    public Builder addUnitPriceExclVat(ai.visma.ssn.type.Candidate value) {
      if (unitPriceExclVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitPriceExclVatIsMutable();
        unitPriceExclVat_.add(value);
        onChanged();
      } else {
        unitPriceExclVatBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Unit price excl vat is the unit price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
     */
    public Builder addUnitPriceExclVat(
        int index, ai.visma.ssn.type.Candidate value) {
      if (unitPriceExclVatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitPriceExclVatIsMutable();
        unitPriceExclVat_.add(index, value);
        onChanged();
      } else {
        unitPriceExclVatBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Unit price excl vat is the unit price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
     */
    public Builder addUnitPriceExclVat(
        ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (unitPriceExclVatBuilder_ == null) {
        ensureUnitPriceExclVatIsMutable();
        unitPriceExclVat_.add(builderForValue.build());
        onChanged();
      } else {
        unitPriceExclVatBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Unit price excl vat is the unit price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
     */
    public Builder addUnitPriceExclVat(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (unitPriceExclVatBuilder_ == null) {
        ensureUnitPriceExclVatIsMutable();
        unitPriceExclVat_.add(index, builderForValue.build());
        onChanged();
      } else {
        unitPriceExclVatBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Unit price excl vat is the unit price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
     */
    public Builder addAllUnitPriceExclVat(
        java.lang.Iterable<? extends ai.visma.ssn.type.Candidate> values) {
      if (unitPriceExclVatBuilder_ == null) {
        ensureUnitPriceExclVatIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, unitPriceExclVat_);
        onChanged();
      } else {
        unitPriceExclVatBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Unit price excl vat is the unit price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
     */
    public Builder clearUnitPriceExclVat() {
      if (unitPriceExclVatBuilder_ == null) {
        unitPriceExclVat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
      } else {
        unitPriceExclVatBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Unit price excl vat is the unit price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
     */
    public Builder removeUnitPriceExclVat(int index) {
      if (unitPriceExclVatBuilder_ == null) {
        ensureUnitPriceExclVatIsMutable();
        unitPriceExclVat_.remove(index);
        onChanged();
      } else {
        unitPriceExclVatBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Unit price excl vat is the unit price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder getUnitPriceExclVatBuilder(
        int index) {
      return getUnitPriceExclVatFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Unit price excl vat is the unit price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
     */
    public ai.visma.ssn.type.CandidateOrBuilder getUnitPriceExclVatOrBuilder(
        int index) {
      if (unitPriceExclVatBuilder_ == null) {
        return unitPriceExclVat_.get(index);  } else {
        return unitPriceExclVatBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Unit price excl vat is the unit price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
     */
    public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
         getUnitPriceExclVatOrBuilderList() {
      if (unitPriceExclVatBuilder_ != null) {
        return unitPriceExclVatBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(unitPriceExclVat_);
      }
    }
    /**
     * <pre>
     * Unit price excl vat is the unit price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addUnitPriceExclVatBuilder() {
      return getUnitPriceExclVatFieldBuilder().addBuilder(
          ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Unit price excl vat is the unit price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addUnitPriceExclVatBuilder(
        int index) {
      return getUnitPriceExclVatFieldBuilder().addBuilder(
          index, ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Unit price excl vat is the unit price of the line excluding vat
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price_excl_vat = 14 [json_name = "unitPriceExclVat"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate.Builder> 
         getUnitPriceExclVatBuilderList() {
      return getUnitPriceExclVatFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> 
        getUnitPriceExclVatFieldBuilder() {
      if (unitPriceExclVatBuilder_ == null) {
        unitPriceExclVatBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder>(
                unitPriceExclVat_,
                ((bitField0_ & 0x00002000) != 0),
                getParentForChildren(),
                isClean());
        unitPriceExclVat_ = null;
      }
      return unitPriceExclVatBuilder_;
    }

    private java.util.List<ai.visma.ssn.type.Candidate> total_ =
      java.util.Collections.emptyList();
    private void ensureTotalIsMutable() {
      if (!((bitField0_ & 0x00004000) != 0)) {
        total_ = new java.util.ArrayList<ai.visma.ssn.type.Candidate>(total_);
        bitField0_ |= 0x00004000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> totalBuilder_;

    /**
     * <pre>
     * Total is the total price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate> getTotalList() {
      if (totalBuilder_ == null) {
        return java.util.Collections.unmodifiableList(total_);
      } else {
        return totalBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Total is the total price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
     */
    public int getTotalCount() {
      if (totalBuilder_ == null) {
        return total_.size();
      } else {
        return totalBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Total is the total price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
     */
    public ai.visma.ssn.type.Candidate getTotal(int index) {
      if (totalBuilder_ == null) {
        return total_.get(index);
      } else {
        return totalBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Total is the total price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
     */
    public Builder setTotal(
        int index, ai.visma.ssn.type.Candidate value) {
      if (totalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalIsMutable();
        total_.set(index, value);
        onChanged();
      } else {
        totalBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Total is the total price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
     */
    public Builder setTotal(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalBuilder_ == null) {
        ensureTotalIsMutable();
        total_.set(index, builderForValue.build());
        onChanged();
      } else {
        totalBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Total is the total price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
     */
    public Builder addTotal(ai.visma.ssn.type.Candidate value) {
      if (totalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalIsMutable();
        total_.add(value);
        onChanged();
      } else {
        totalBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Total is the total price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
     */
    public Builder addTotal(
        int index, ai.visma.ssn.type.Candidate value) {
      if (totalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTotalIsMutable();
        total_.add(index, value);
        onChanged();
      } else {
        totalBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Total is the total price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
     */
    public Builder addTotal(
        ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalBuilder_ == null) {
        ensureTotalIsMutable();
        total_.add(builderForValue.build());
        onChanged();
      } else {
        totalBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Total is the total price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
     */
    public Builder addTotal(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (totalBuilder_ == null) {
        ensureTotalIsMutable();
        total_.add(index, builderForValue.build());
        onChanged();
      } else {
        totalBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Total is the total price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
     */
    public Builder addAllTotal(
        java.lang.Iterable<? extends ai.visma.ssn.type.Candidate> values) {
      if (totalBuilder_ == null) {
        ensureTotalIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, total_);
        onChanged();
      } else {
        totalBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Total is the total price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
     */
    public Builder clearTotal() {
      if (totalBuilder_ == null) {
        total_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
      } else {
        totalBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Total is the total price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
     */
    public Builder removeTotal(int index) {
      if (totalBuilder_ == null) {
        ensureTotalIsMutable();
        total_.remove(index);
        onChanged();
      } else {
        totalBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Total is the total price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder getTotalBuilder(
        int index) {
      return getTotalFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Total is the total price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
     */
    public ai.visma.ssn.type.CandidateOrBuilder getTotalOrBuilder(
        int index) {
      if (totalBuilder_ == null) {
        return total_.get(index);  } else {
        return totalBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Total is the total price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
     */
    public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
         getTotalOrBuilderList() {
      if (totalBuilder_ != null) {
        return totalBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(total_);
      }
    }
    /**
     * <pre>
     * Total is the total price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addTotalBuilder() {
      return getTotalFieldBuilder().addBuilder(
          ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Total is the total price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addTotalBuilder(
        int index) {
      return getTotalFieldBuilder().addBuilder(
          index, ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Total is the total price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate total = 15 [json_name = "total"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate.Builder> 
         getTotalBuilderList() {
      return getTotalFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> 
        getTotalFieldBuilder() {
      if (totalBuilder_ == null) {
        totalBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder>(
                total_,
                ((bitField0_ & 0x00004000) != 0),
                getParentForChildren(),
                isClean());
        total_ = null;
      }
      return totalBuilder_;
    }

    private java.util.List<ai.visma.ssn.type.Candidate> unitPrice_ =
      java.util.Collections.emptyList();
    private void ensureUnitPriceIsMutable() {
      if (!((bitField0_ & 0x00008000) != 0)) {
        unitPrice_ = new java.util.ArrayList<ai.visma.ssn.type.Candidate>(unitPrice_);
        bitField0_ |= 0x00008000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> unitPriceBuilder_;

    /**
     * <pre>
     * Unit price is the unit price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate> getUnitPriceList() {
      if (unitPriceBuilder_ == null) {
        return java.util.Collections.unmodifiableList(unitPrice_);
      } else {
        return unitPriceBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Unit price is the unit price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
     */
    public int getUnitPriceCount() {
      if (unitPriceBuilder_ == null) {
        return unitPrice_.size();
      } else {
        return unitPriceBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Unit price is the unit price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
     */
    public ai.visma.ssn.type.Candidate getUnitPrice(int index) {
      if (unitPriceBuilder_ == null) {
        return unitPrice_.get(index);
      } else {
        return unitPriceBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Unit price is the unit price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
     */
    public Builder setUnitPrice(
        int index, ai.visma.ssn.type.Candidate value) {
      if (unitPriceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitPriceIsMutable();
        unitPrice_.set(index, value);
        onChanged();
      } else {
        unitPriceBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Unit price is the unit price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
     */
    public Builder setUnitPrice(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (unitPriceBuilder_ == null) {
        ensureUnitPriceIsMutable();
        unitPrice_.set(index, builderForValue.build());
        onChanged();
      } else {
        unitPriceBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Unit price is the unit price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
     */
    public Builder addUnitPrice(ai.visma.ssn.type.Candidate value) {
      if (unitPriceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitPriceIsMutable();
        unitPrice_.add(value);
        onChanged();
      } else {
        unitPriceBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Unit price is the unit price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
     */
    public Builder addUnitPrice(
        int index, ai.visma.ssn.type.Candidate value) {
      if (unitPriceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUnitPriceIsMutable();
        unitPrice_.add(index, value);
        onChanged();
      } else {
        unitPriceBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Unit price is the unit price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
     */
    public Builder addUnitPrice(
        ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (unitPriceBuilder_ == null) {
        ensureUnitPriceIsMutable();
        unitPrice_.add(builderForValue.build());
        onChanged();
      } else {
        unitPriceBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Unit price is the unit price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
     */
    public Builder addUnitPrice(
        int index, ai.visma.ssn.type.Candidate.Builder builderForValue) {
      if (unitPriceBuilder_ == null) {
        ensureUnitPriceIsMutable();
        unitPrice_.add(index, builderForValue.build());
        onChanged();
      } else {
        unitPriceBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Unit price is the unit price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
     */
    public Builder addAllUnitPrice(
        java.lang.Iterable<? extends ai.visma.ssn.type.Candidate> values) {
      if (unitPriceBuilder_ == null) {
        ensureUnitPriceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, unitPrice_);
        onChanged();
      } else {
        unitPriceBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Unit price is the unit price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
     */
    public Builder clearUnitPrice() {
      if (unitPriceBuilder_ == null) {
        unitPrice_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
      } else {
        unitPriceBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Unit price is the unit price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
     */
    public Builder removeUnitPrice(int index) {
      if (unitPriceBuilder_ == null) {
        ensureUnitPriceIsMutable();
        unitPrice_.remove(index);
        onChanged();
      } else {
        unitPriceBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Unit price is the unit price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder getUnitPriceBuilder(
        int index) {
      return getUnitPriceFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Unit price is the unit price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
     */
    public ai.visma.ssn.type.CandidateOrBuilder getUnitPriceOrBuilder(
        int index) {
      if (unitPriceBuilder_ == null) {
        return unitPrice_.get(index);  } else {
        return unitPriceBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Unit price is the unit price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
     */
    public java.util.List<? extends ai.visma.ssn.type.CandidateOrBuilder> 
         getUnitPriceOrBuilderList() {
      if (unitPriceBuilder_ != null) {
        return unitPriceBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(unitPrice_);
      }
    }
    /**
     * <pre>
     * Unit price is the unit price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addUnitPriceBuilder() {
      return getUnitPriceFieldBuilder().addBuilder(
          ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Unit price is the unit price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
     */
    public ai.visma.ssn.type.Candidate.Builder addUnitPriceBuilder(
        int index) {
      return getUnitPriceFieldBuilder().addBuilder(
          index, ai.visma.ssn.type.Candidate.getDefaultInstance());
    }
    /**
     * <pre>
     * Unit price is the unit price of the line (with/without vat)
     * </pre>
     *
     * <code>repeated .ssn.type.Candidate unit_price = 16 [json_name = "unitPrice"];</code>
     */
    public java.util.List<ai.visma.ssn.type.Candidate.Builder> 
         getUnitPriceBuilderList() {
      return getUnitPriceFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder> 
        getUnitPriceFieldBuilder() {
      if (unitPriceBuilder_ == null) {
        unitPriceBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            ai.visma.ssn.type.Candidate, ai.visma.ssn.type.Candidate.Builder, ai.visma.ssn.type.CandidateOrBuilder>(
                unitPrice_,
                ((bitField0_ & 0x00008000) != 0),
                getParentForChildren(),
                isClean());
        unitPrice_ = null;
      }
      return unitPriceBuilder_;
    }

    private ai.visma.ssn.type.ModelSpec modelMetadata_;
    private com.google.protobuf.SingleFieldBuilder<
        ai.visma.ssn.type.ModelSpec, ai.visma.ssn.type.ModelSpec.Builder, ai.visma.ssn.type.ModelSpecOrBuilder> modelMetadataBuilder_;
    /**
     * <pre>
     * Model metadata
     * </pre>
     *
     * <code>.ssn.type.ModelSpec model_metadata = 17 [json_name = "modelMetadata"];</code>
     * @return Whether the modelMetadata field is set.
     */
    public boolean hasModelMetadata() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <pre>
     * Model metadata
     * </pre>
     *
     * <code>.ssn.type.ModelSpec model_metadata = 17 [json_name = "modelMetadata"];</code>
     * @return The modelMetadata.
     */
    public ai.visma.ssn.type.ModelSpec getModelMetadata() {
      if (modelMetadataBuilder_ == null) {
        return modelMetadata_ == null ? ai.visma.ssn.type.ModelSpec.getDefaultInstance() : modelMetadata_;
      } else {
        return modelMetadataBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Model metadata
     * </pre>
     *
     * <code>.ssn.type.ModelSpec model_metadata = 17 [json_name = "modelMetadata"];</code>
     */
    public Builder setModelMetadata(ai.visma.ssn.type.ModelSpec value) {
      if (modelMetadataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        modelMetadata_ = value;
      } else {
        modelMetadataBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00010000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Model metadata
     * </pre>
     *
     * <code>.ssn.type.ModelSpec model_metadata = 17 [json_name = "modelMetadata"];</code>
     */
    public Builder setModelMetadata(
        ai.visma.ssn.type.ModelSpec.Builder builderForValue) {
      if (modelMetadataBuilder_ == null) {
        modelMetadata_ = builderForValue.build();
      } else {
        modelMetadataBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00010000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Model metadata
     * </pre>
     *
     * <code>.ssn.type.ModelSpec model_metadata = 17 [json_name = "modelMetadata"];</code>
     */
    public Builder mergeModelMetadata(ai.visma.ssn.type.ModelSpec value) {
      if (modelMetadataBuilder_ == null) {
        if (((bitField0_ & 0x00010000) != 0) &&
          modelMetadata_ != null &&
          modelMetadata_ != ai.visma.ssn.type.ModelSpec.getDefaultInstance()) {
          getModelMetadataBuilder().mergeFrom(value);
        } else {
          modelMetadata_ = value;
        }
      } else {
        modelMetadataBuilder_.mergeFrom(value);
      }
      if (modelMetadata_ != null) {
        bitField0_ |= 0x00010000;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Model metadata
     * </pre>
     *
     * <code>.ssn.type.ModelSpec model_metadata = 17 [json_name = "modelMetadata"];</code>
     */
    public Builder clearModelMetadata() {
      bitField0_ = (bitField0_ & ~0x00010000);
      modelMetadata_ = null;
      if (modelMetadataBuilder_ != null) {
        modelMetadataBuilder_.dispose();
        modelMetadataBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Model metadata
     * </pre>
     *
     * <code>.ssn.type.ModelSpec model_metadata = 17 [json_name = "modelMetadata"];</code>
     */
    public ai.visma.ssn.type.ModelSpec.Builder getModelMetadataBuilder() {
      bitField0_ |= 0x00010000;
      onChanged();
      return getModelMetadataFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Model metadata
     * </pre>
     *
     * <code>.ssn.type.ModelSpec model_metadata = 17 [json_name = "modelMetadata"];</code>
     */
    public ai.visma.ssn.type.ModelSpecOrBuilder getModelMetadataOrBuilder() {
      if (modelMetadataBuilder_ != null) {
        return modelMetadataBuilder_.getMessageOrBuilder();
      } else {
        return modelMetadata_ == null ?
            ai.visma.ssn.type.ModelSpec.getDefaultInstance() : modelMetadata_;
      }
    }
    /**
     * <pre>
     * Model metadata
     * </pre>
     *
     * <code>.ssn.type.ModelSpec model_metadata = 17 [json_name = "modelMetadata"];</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        ai.visma.ssn.type.ModelSpec, ai.visma.ssn.type.ModelSpec.Builder, ai.visma.ssn.type.ModelSpecOrBuilder> 
        getModelMetadataFieldBuilder() {
      if (modelMetadataBuilder_ == null) {
        modelMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            ai.visma.ssn.type.ModelSpec, ai.visma.ssn.type.ModelSpec.Builder, ai.visma.ssn.type.ModelSpecOrBuilder>(
                getModelMetadata(),
                getParentForChildren(),
                isClean());
        modelMetadata_ = null;
      }
      return modelMetadataBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:ssn.type.PurchaseLine)
  }

  // @@protoc_insertion_point(class_scope:ssn.type.PurchaseLine)
  private static final ai.visma.ssn.type.PurchaseLine DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ai.visma.ssn.type.PurchaseLine();
  }

  public static ai.visma.ssn.type.PurchaseLine getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PurchaseLine>
      PARSER = new com.google.protobuf.AbstractParser<PurchaseLine>() {
    @java.lang.Override
    public PurchaseLine parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PurchaseLine> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PurchaseLine> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public ai.visma.ssn.type.PurchaseLine getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

